<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exx.dzj.mapper.customer.CustomerSupplierBeanMapper">
  <resultMap id="BaseResultMap" type="com.exx.dzj.entity.customer.CustomerSupplierBean">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cust_code" jdbcType="VARCHAR" property="custCode" />
    <result column="cust_name" jdbcType="VARCHAR" property="custName" />
    <result column="cust_type" jdbcType="VARCHAR" property="custType" />
    <result column="cust_level" jdbcType="VARCHAR" property="custLevel" />
    <result column="level_name" jdbcType="VARCHAR" property="levelName" />
    <result column="salesman_code" jdbcType="VARCHAR" property="salesmanCode" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="region_code" jdbcType="VARCHAR" property="regionCode" />
    <result column="region_name" jdbcType="VARCHAR" property="regionName" />
    <result column="ship_code" jdbcType="VARCHAR" property="shipCode" />
    <result column="ship_address" jdbcType="VARCHAR" property="shipAddress" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Base_Column_List">
    id, cust_code, cust_name, cust_type, cust_level, level_name, salesman_code, user_code, 
    region_code, region_name, ship_code, ship_address, remarks, create_time, create_user, 
    update_time, update_user
  </sql>

  <select id="selectByExample" parameterType="com.exx.dzj.entity.customer.CustomerSupplierBeanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tab_customer_supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tab_customer_supplier
    where id = #{id,jdbcType=INTEGER}
  </select>

  <insert id="insertSelective" parameterType="com.exx.dzj.entity.customer.CustomerSupplierBean">
    insert into tab_customer_supplier
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="custCode != null and custCode!=''">
        cust_code,
      </if>
      <if test="custName != null and custName!=''">
        cust_name,
      </if>
      <if test="custType != null">
        cust_type,
      </if>
      <if test="custLevel != null">
        cust_level,
      </if>
      <if test="levelName != null and levelName!=''">
        level_name,
      </if>
      <if test="salesmanCode != null and salesmanCode!=''">
        salesman_code,
      </if>
      <if test="userCode != null and userCode!=''">
        user_code,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="rankCode != null and rankCode!=''">
        rank_code,
      </if>
      <if test="rankName != null and rankName!=''">
        rank_name,
      </if>
      <if test="regionCode != null and regionCode!=''">
        region_code,
      </if>
      <if test="regionName != null and regionName!=''">
        region_name,
      </if>
      <if test="shipCode != null and shipCode!=''">
        ship_code,
      </if>
      <if test="shipAddress != null and shipAddress!=''">
        ship_address,
      </if>
      <if test="remarks != null and remarks!=''">
        remarks,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="source != null">
        source,
      </if>
        create_time,
      <if test="createUser != null and createUser !=''">
        create_user,
      </if>
        update_time,
      <if test="updateUser != null and updateUser !=''">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="custCode != null and custCode !=''">
        #{custCode,jdbcType=VARCHAR},
      </if>
      <if test="custName != null and custName !=''">
        #{custName,jdbcType=VARCHAR},
      </if>
      <if test="custType != null">
        #{custType},
      </if>
      <if test="custLevel != null">
        #{custLevel,jdbcType=VARCHAR},
      </if>
      <if test="levelName != null and levelName !=''">
        #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="salesmanCode != null and salesmanCode !=''">
        #{salesmanCode,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null and userCode !=''">
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        #{identity},
      </if>
      <if test="rankCode != null and rankCode!=''">
        #{rankCode,jdbcType=VARCHAR},
      </if>
      <if test="rankName != null and rankName!=''">
        #{rankName,jdbcType=VARCHAR},
      </if>
      <if test="regionCode != null and regionCode !=''">
        #{regionCode,jdbcType=VARCHAR},
      </if>
      <if test="regionName != null and regionName !=''">
        #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="shipCode != null and shipCode !=''">
        #{shipCode,jdbcType=VARCHAR},
      </if>
      <if test="shipAddress != null and shipAddress !=''">
        #{shipAddress,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null and remarks !=''">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="source != null">
        #{source},
      </if>
        SYSDATE(),
      <if test="createUser != null and createUser !=''">
        #{createUser,jdbcType=VARCHAR},
      </if>
        SYSDATE(),
      <if test="updateUser != null and updateUser !=''">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByExampleSelective" parameterType="map">
    update tab_customer_supplier
    <set>
      <if test="record.custName != null">
        cust_name = #{record.custName,jdbcType=VARCHAR},
      </if>
      <if test="record.custType != null">
        cust_type = #{record.custType,jdbcType=VARCHAR},
      </if>
      <if test="record.custLevel != null">
        cust_level = #{record.custLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.levelName != null">
        level_name = #{record.levelName,jdbcType=VARCHAR},
      </if>
      <if test="record.salesmanCode != null">
        salesman_code = #{record.salesmanCode,jdbcType=VARCHAR},
      </if>
      <if test="record.userCode != null">
        user_code = #{record.userCode,jdbcType=VARCHAR},
      </if>
      <if test="record.regionCode != null">
        region_code = #{record.regionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.regionName != null">
        region_name = #{record.regionName,jdbcType=VARCHAR},
      </if>
      <if test="record.shipCode != null">
        ship_code = #{record.shipCode,jdbcType=VARCHAR},
      </if>
      <if test="record.shipAddress != null">
        ship_address = #{record.shipAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
        update_time = SYSDATE(),
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.exx.dzj.entity.customer.CustomerSupplierBean">
    update tab_customer_supplier
    <set>
      <if test="custName != null and custName!=''">
        cust_name = #{custName,jdbcType=VARCHAR},
      </if>
      <if test="custType != null">
        cust_type = #{custType,jdbcType=VARCHAR},
      </if>
      <if test="custLevel != null">
        cust_level = #{custLevel,jdbcType=VARCHAR},
      </if>
      <if test="levelName != null and levelName!=''">
        level_name = #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="salesmanCode != null and salesmanCode!=''">
        salesman_code = #{salesmanCode,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null and userCode!=''">
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="regionCode != null and regionCode!=''">
        region_code = #{regionCode,jdbcType=VARCHAR},
      </if>
      <if test="regionName != null and regionName!=''">
        region_name = #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        identity = #{identity,jdbcType=INTEGER},
      </if>
      <if test="rankCode != null and rankCode!=''">
        rank_code = #{rankCode,jdbcType=VARCHAR},
      </if>
      <if test="rankName != null and rankName!=''">
        rank_name = #{rankName,jdbcType=VARCHAR},
      </if>
      <if test="shipCode != null and shipCode!=''">
        ship_code = #{shipCode,jdbcType=VARCHAR},
      </if>
      <if test="shipAddress != null and shipAddress!=''">
        ship_address = #{shipAddress,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="remarks != null and remarks!=''">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
        update_time = SYSDATE(),
      <if test="updateUser != null and updateUser!=''">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where cust_code = #{custCode,jdbcType=VARCHAR}
  </update>

  <!-- *****************************************手写 sql  start ******************************************* -->
  <!-- 查询 客户或供应商列表数据 -->
  <select id="queryCustomerSupplierList" resultType="com.exx.dzj.entity.customer.CustomerSupplierModel"
          parameterType="com.exx.dzj.entity.customer.CustomerSupplierQuery">
    SELECT
        cs.cust_code custCode,
        cs.cust_name custName,
        IFNULL(cw.link_man, '无') linkMan,
        cw.email email,
        cw.phone_num phoneNum,
        cw.delivery_address_one deliveryAddressOne,
        IFNULL(ui.real_name, '无') salesman,
        cs.level_name levelName,
        ta.discount_rate discountRate,
        ta.account_period accountPeriod,
        cs.region_name regionName,
        IFNULL(cs.rank_name, '无') rankName,
        IFNULL(DATE_FORMAT(cs.birthday, '%Y-%m-%d'), '无') birthday,
      CASE
    WHEN cs.is_enable = 1 THEN
    '使用中'
    ELSE
    '关闭'
    END dataStatus
    FROM
        tab_customer_supplier cs
    LEFT JOIN tab_user_info ui ON cs.salesman_code = ui.salesman_code
    AND cs.user_code = ui.user_code
    LEFT JOIN tab_contact_way cw ON cs.cust_code = cw.cust_code AND cs.source = cw.source
    LEFT JOIN tab_account_attribute ta ON cs.cust_code = ta.cust_code AND cs.source = ta.source
    WHERE
      cs.is_enable = 1
    <if test="custName != null and custName != ''">
      AND cs.cust_name LIKE CONCAT('%',#{custName},'%')
    </if>
    <if test="linkMan != null and linkMan != ''">
      AND cw.link_man LIKE CONCAT('%',#{linkMan},'%')
    </if>
    <if test="custType != null and custType != '' and custType == '1'.toString()">
      AND cs.cust_type in (1, 3)
      <!--AND cs.source = #{custType}-->
    </if>
    <if test="custType != null and custType != '' and custType == '2'.toString()">
      AND cs.cust_type in (2, 3)
      <!--AND cs.source = #{custType}-->
    </if>
    <if test="custLevel != null and custLevel != ''">
      AND cs.cust_level = #{custLevel}
    </if>
    <if test="phoneNum != null and phoneNum != ''">
      AND cw.phone_num LIKE CONCAT("%", #{phoneNum}, "%")
    </if>
    ORDER BY cs.create_time DESC
  </select>

  <!-- 查询  客户和供应商详细信息 -->
  <resultMap id="CustomerSupplierResultMap" type="com.exx.dzj.entity.customer.CustomerSupplierInfo">
    <result column="custCode" property="custCode"/>
    <result column="custName" property="custName"/>
    <result column="custType" property="custType"/>
    <result column="custLevel" property="custLevel"/>
    <result column="levelName" property="levelName"/>
    <result column="salesmanCode" property="salesmanCode"/>
    <result column="userCode" property="userCode"/>
    <result column="identity" property="identity"/>
    <result column="rankCode" property="rankCode"/>
    <result column="rankName" property="rankName"/>
    <result column="regionCode" property="regionCode"/>
    <result column="regionName" property="regionName"/>
    <result column="shipCode" property="shipCode"/>
    <result column="shipAddress" property="shipAddress"/>
    <result column="remarks" property="remarks"/>
    <result column="birthday" property="birthday"/>
    <!-- 联系方式 -->
    <result column="linkMan" property="linkMan"/>
    <result column="telephoneNum" property="telephoneNum"/>
    <result column="phoneNum" property="phoneNum"/>
    <result column="faxNum" property="faxNum"/>
    <result column="email" property="email"/>
    <result column="postalAddress" property="postalAddress"/>
    <result column="postalAddressEng" property="postalAddressEng"/>
    <result column="deliveryAddressOne" property="deliveryAddressOne"/>
    <result column="deliveryAddressTwo" property="deliveryAddressTwo"/>
    <result column="zipCode" property="zipCode"/>
    <!-- 会计属性 -->
    <result column="paymentMethod" property="paymentMethod"/>
    <result column="paymentMethodName" property="paymentMethodName"/>
    <result column="discountRate" property="discountRate"/>
    <result column="accountPeriod" property="accountPeriod"/>
    <result column="lineCredit" property="lineCredit"/>
    <result column="payTaxesNum" property="payTaxesNum"/>
    <result column="billType" property="billType"/>
    <result column="bankDeposit" property="bankDeposit"/>
    <result column="openAccount" property="openAccount"/>
  </resultMap>

  <sql id="QueryCustomerSupplierSql">
    SELECT
      cs.cust_code custCode,
      cs.cust_name custName,
      cs.cust_type custType,
      cs.cust_level custLevel,
      cs.level_name levelName,
      cs.salesman_code salesmanCode,
      cs.user_code userCode,
      cs.identity,
      cs.rank_code rankCode,
      cs.rank_name rankName,
      cs.region_code regionCode,
      cs.region_name regionName,
      cs.ship_code shipCode,
      cs.ship_address shipAddress,
      cs.remarks,
      cs.birthday,
      cw.link_man linkMan,
      cw.telephone_num telephoneNum,
      cw.phone_num phoneNum,
      cw.fax_num faxNum,
      cw.email email,
      cw.postal_address postalAddress,
      cw.postal_address_eng postalAddressEng,
      cw.delivery_address_one deliveryAddressOne,
      cw.delivery_address_two deliveryAddressTwo,
      cw.zip_code zipCode,
      ta.payment_method paymentMethod,
      di.dict_name paymentMethodName,
      ta.discount_rate discountRate,
      ta.account_period accountPeriod,
      ta.line_credit lineCredit,
      ta.pay_taxes_num payTaxesNum,
      ta.bill_type billType,
      ta.bank_deposit bankDeposit,
      ta.open_account openAccount
    FROM
        tab_customer_supplier cs
    LEFT JOIN tab_contact_way cw ON cs.cust_code = cw.cust_code
    LEFT JOIN tab_account_attribute ta ON cs.cust_code = ta.cust_code
    LEFT JOIN tab_dictionary_info di ON di.dict_code = ta.payment_method AND di.data_type = 'receivables_payment_method'
    WHERE
        1 = 1
  </sql>

  <!-- 查询 客户或供应商详细信息 -->
  <select id="queryCustomerSupplierInfo" resultMap="CustomerSupplierResultMap">
    SELECT
    cs.cust_code custCode,
    cs.cust_name custName,
    cs.cust_type custType,
    cs.cust_level custLevel,
    cs.level_name levelName,
    cs.salesman_code salesmanCode,
    cs.user_code userCode,
    cs.identity,
    cs.rank_code rankCode,
    cs.rank_name rankName,
    cs.region_code regionCode,
    cs.region_name regionName,
    cs.ship_code shipCode,
    cs.ship_address shipAddress,
    cs.remarks,
    cs.birthday,
    cw.link_man linkMan,
    cw.telephone_num telephoneNum,
    cw.phone_num phoneNum,
    cw.fax_num faxNum,
    cw.email email,
    cw.postal_address postalAddress,
    cw.postal_address_eng postalAddressEng,
    cw.delivery_address_one deliveryAddressOne,
    cw.delivery_address_two deliveryAddressTwo,
    cw.zip_code zipCode,
    ta.payment_method paymentMethod,
    di.dict_name paymentMethodName,
    ta.discount_rate discountRate,
    ta.account_period accountPeriod,
    ta.line_credit lineCredit,
    ta.pay_taxes_num payTaxesNum,
    ta.bill_type billType,
    ta.bank_deposit bankDeposit,
    ta.open_account openAccount
    FROM
    tab_customer_supplier cs
    LEFT JOIN tab_contact_way cw ON cs.cust_code = cw.cust_code AND cw.source IN (#{custType}, 3)
    LEFT JOIN tab_account_attribute ta ON cs.cust_code = ta.cust_code AND ta.source IN (#{custType}, 3)
    LEFT JOIN tab_dictionary_info di ON di.dict_code = ta.payment_method AND di.data_type = 'receivables_payment_method'
    WHERE
    1 = 1
    <if test="custCode != null and custCode !=''">
      AND cs.cust_code = #{custCode}
    </if>
    <if test="custType != null and custType !=''">
      AND cs.cust_type IN (#{custType}, 3)
    </if>
  </select>

  <!-- excel导出数据 -->
  <select id="getCustomerSupplierExcelList" resultMap="CustomerSupplierResultMap" parameterType="com.exx.dzj.entity.customer.CustomerSupplierQuery">
    <include refid="QueryCustomerSupplierSql"/>
    <if test="custName != null and custName != ''">
      AND cs.cust_name LIKE CONCAT('%',#{custName},'%')
    </if>
    <if test="linkMan != null and linkMan != ''">
      AND cw.link_man LIKE CONCAT('%',#{linkMan},'%')
    </if>
    <if test="custType != null and custType != '' and custType == '1'.toString()">
      AND cs.cust_type in (1, 3)
    </if>
    <if test="custType != null and custType != '' and custType == '2'.toString()">
      AND cs.cust_type in (2, 3)
    </if>
  </select>

  <!-- 修改数据状态 -->
  <update id="modifyCustomerSupplierDataStatus">
    update tab_customer_supplier cs set cs.is_enable = #{isEnable}, cs.update_user = #{userCode}
    <choose>
      <when test="custCodes!=null">
        where cs.cust_code in
        <foreach collection="custCodes" item="item" open="(" close=")" separator=",">#{item}</foreach>
      </when>
      <otherwise>
        where cs.cust_code = null
      </otherwise>
    </choose>
  </update>


  <!-- 客户下拉数据 -->
  <select id="queryCustomerPullDownInfo" resultMap="pullDownMap" parameterType="java.lang.Integer">
    SELECT
    cust_code ,
    cust_name
    FROM tab_customer_supplier
    WHERE cust_type IN (#{type},3)
  </select>
  <resultMap id="pullDownMap" type="com.exx.dzj.entity.customer.CustomerSupplierInfo">
    <result column="cust_code" property="custCode"/>
    <result column="cust_name" property="custName"/>
  </resultMap>

  <!-- 批量添加客户信息, 用于数据导入 -->
  <insert id="batchInsertCustomerSupplier">
    INSERT INTO tab_customer_supplier(
        cust_code, cust_name, cust_type,cust_level,level_name,salesman_code,user_code,region_code,
        region_name,ship_code,source,ship_address,remarks,create_time, create_user, is_enable, update_user)
    VALUES
      <foreach collection="list" item="item" separator="," >
        (
          #{item.custCode}, #{item.custName}, #{item.custType}, #{item.custLevel}, #{item.levelName}, #{item.salesmanCode}, #{item.userCode}, #{item.regionCode},
        #{item.regionName}, #{item.shipCode}, #{item.source}, #{item.shipAddress}, #{item.remarks}, SYSDATE(), #{item.createUser}, #{item.isEnable}, #{item.updateUser}
        )
      </foreach>
  </insert>
  
  <select id="queryCustomerSupplierBeanList" resultType="com.exx.dzj.entity.customer.CustomerSupplierBean">
    SELECT
      cust_code AS custCode,
      cust_name AS custName
    FROM tab_customer_supplier
    WHERE  1=1
  </select>

  <select id="selectionCustomer" parameterType="com.exx.dzj.entity.customer.CustomerSupplierQuery" resultType="com.exx.dzj.entity.customer.CustomerSupplierBean">
    SELECT
      id AS id,
      cust_code AS custCode,
      cust_name AS custName
    FROM tab_customer_supplier
    WHERE  1=1
    AND cust_type IN (#{custType}, 3)
    <if test="custName != null">
      AND cust_name LIKE CONCAT('%',#{custName},'%')
    </if>
  </select>
  
  <select id="countCustomerSupplier" resultType="int">
    SELECT COUNT(1) FROM tab_customer_supplier WHERE cust_type IN (#{type}, 3)
  </select>

  <select id="newlyIncreasedCutomerCount" resultType="int">
    SELECT COUNT(1) FROM tab_customer_supplier
    WHERE cust_type IN (#{type}, 3)
    AND create_time BETWEEN DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s') AND DATE_FORMAT(CURDATE(),'%Y-%m-%d 23:59:59')
  </select>
  
  <select id="queryStatisticsCustomer" resultMap="insuranceCustomerMap">
    SELECT rank_code, rank_name, COUNT(rank_code) AS `count` FROM tab_customer_supplier where
    cust_type in (1, 3) AND `identity` = 1 GROUP BY rank_code
  </select>
  <resultMap id="insuranceCustomerMap" type="com.exx.dzj.entity.customer.InsuranceCustomer">
    <result column="rank_code" property="rankCode"/>
    <result column="rank_name" property="rankName"/>
    <result column="count" property="count"/>
  </resultMap>

  <select id="queryIncreaseCutomerForMonth" resultMap="increaseCustomerMap">
    SELECT MONTH(create_time) AS `month`, COUNT(MONTH (create_time)) AS `count`
    FROM tab_customer_supplier
     WHERE YEAR(create_time) = DATE_FORMAT(CURDATE(),'%Y')
    GROUP BY MONTH (create_time)
    ORDER BY YEAR(create_time),MONTH(create_time);
  </select>
  <resultMap id="increaseCustomerMap" type="com.exx.dzj.entity.customer.InsuranceCustomer">
    <result column="month" property="month"/>
    <result column="count" property="count"/>
  </resultMap>

  <select id="queryCustomerSelect" resultType="com.exx.dzj.entity.customer.CustomerSupplierBean">
    SELECT id AS id, cust_code AS custCode, cust_name AS custName FROM tab_customer_supplier WHERE 1 = 1
      <if test="custName != null and custName != ''">
        AND cust_name REGEXP #{custName}
      </if>
      AND EXISTS (SELECT DISTINCT(cust_code) FROM tab_sale_info)
  </select>

</mapper>