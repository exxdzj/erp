<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exx.dzj.mapper.market.SaleInfoMapper">
  <resultMap id="BaseResultMap" type="com.exx.dzj.entity.market.SaleInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sale_code" jdbcType="VARCHAR" property="saleCode" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="salesman_code" jdbcType="VARCHAR" property="salesmanCode" />
    <result column="cust_code" jdbcType="VARCHAR" property="custCode" />
    <result column="sale_project" jdbcType="VARCHAR" property="saleProject" />
    <result column="sale_date" jdbcType="DATE" property="saleDate" />
    <result column="sales_order_code" jdbcType="VARCHAR" property="salesOrderCode" />
    <result column="currency" jdbcType="VARCHAR" property="currency" />
    <result column="exchange_rate" jdbcType="DOUBLE" property="exchangeRate" />
    <result column="delivery_order_code" jdbcType="VARCHAR" property="deliveryOrderCode" />
    <result column="cust_order_code" jdbcType="VARCHAR" property="custOrderCode" />
    <result column="delivery_address" jdbcType="VARCHAR" property="deliveryAddress" />
    <result column="invoice_code" jdbcType="VARCHAR" property="invoiceCode" />
    <result column="bill_type" jdbcType="VARCHAR" property="billType" />
    <result column="total_sum" jdbcType="DECIMAL" property="totalSum" />
    <result column="discount_amount" jdbcType="DECIMAL" property="discountAmount" />
    <result column="receivable_accoun" jdbcType="DECIMAL" property="receivableAccoun" />
    <result column="received_amoun" jdbcType="DECIMAL" property="receivedAmoun" />
    <result column="receipt_num" jdbcType="VARCHAR" property="receiptNum" />
    <result column="collection_terms" jdbcType="VARCHAR" property="collectionTerms" />
    <result column="account_period" jdbcType="INTEGER" property="accountPeriod" />
    <result column="due_date" jdbcType="DATE" property="dueDate" />
    <result column="is_enable" jdbcType="INTEGER" property="isEnable" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Base_Column_List">
    id, sale_code, user_code, salesman_code, cust_code, sale_project, sale_date, sales_order_code,
    currency, exchange_rate, delivery_order_code, cust_order_code, delivery_address,
    invoice_code, bill_type, total_sum, discount_amount, receivable_accoun, received_amoun,
    receipt_num, collection_terms, account_period, due_date, is_enable, remarks, create_time,
    create_user, update_time, update_user
  </sql>

  <!-- 销售单列表查询 -->
  <select id="querySalesTicketList" resultMap="saleListMap" parameterType="java.util.Map">
    SELECT
      SINFO.id,
      SINFO.sale_code,
      SINFO.sale_date,
      CSUPPLIER.cust_name,
      SINFO.currency,
      SINFO.exchange_rate,
      SINFO.total_sum,
      SINFO.discount_amount,
      SINFO.receivable_accoun,
      SINFO.cust_phone_num,
      SINFO.due_date,
      /*DICTIONPAY.dict_name AS paymentStatus,*/
      SINFO.payment_status AS paymentStatus,
      SINFO.invoice_code AS invoiceCode,
      DICTIONPRO.dict_name AS saleProject,
      /*SALESOURCE.dict_name AS saleSourceName,*/
      UINFO.real_name AS userName,
      SINFO.user_code AS userCode,
      SINFO.create_user AS createUser,
      SINFO.collection_user_name AS collectionUserName,
      SINFO.sale_source AS saleSource,
      SINFO.is_receipt AS isReceipt,
      SINFO.subordinate_company_name AS subordinateCompanyName,
      /*logistics.logistic_company_name AS logisticsCompamyName,
      logistics.freight_code AS freightCode,*/
      SINFO.remarks AS remarks
    FROM tab_sale_info SINFO
   /* LEFT JOIN tab_sale_logistic_info logistics ON SINFO.sale_code = logistics.sale_code*/
    /*LEFT JOIN tab_dictionary_info DICTIONPAY ON SINFO.payment_status=DICTIONPAY.dict_code AND DICTIONPAY.data_type='collection_status'*/
    LEFT JOIN tab_dictionary_info DICTIONPRO ON SINFO.sale_project=DICTIONPRO.dict_code AND DICTIONPRO.data_type='project_list'
   /* LEFT JOIN tab_dictionary_info SALESOURCE ON SINFO.sale_project=SALESOURCE.dict_code AND DICTIONPRO.data_type='source_sales_order'*/
    LEFT JOIN tab_customer_supplier CSUPPLIER ON SINFO.cust_code=CSUPPLIER.cust_code AND CSUPPLIER.cust_type IN (1, 3)
    LEFT JOIN tab_user_info UINFO ON SINFO.salesman_code = UINFO.salesman_code
    WHERE 1=1
      <if test="startTime != null and startTime != ''">
        AND  <![CDATA[SINFO.sale_date >= DATE_FORMAT(#{startTime},'%Y-%m-%d %H:%i:%s')]]>
      </if>
      <if test="endTime != null and endTime != ''">
        AND  <![CDATA[SINFO.sale_date <= DATE_FORMAT(#{endTime},'%Y-%m-%d 23:59:59')]]>
      </if>

      <if test="saleCode != null and saleCode != ''">
        AND  SINFO.sale_code LIKE CONCAT('%', #{saleCode}, '%')
      </if>
      <if test="salesmanCode != null and salesmanCode != ''">
        AND  SINFO.salesman_code=#{salesmanCode}
      </if>
      <if test="paymentStatus != null and paymentStatus != ''">
        AND  SINFO.payment_status=#{paymentStatus}
      </if>
      <if test="subordinateCompanyCode != null and subordinateCompanyCode != ''">
        AND  SINFO.subordinate_company_code=#{subordinateCompanyCode}
      </if>
      <if test="custCode != null and custCode != ''">
        AND  SINFO.cust_code=#{custCode}
      </if>

      /*AND SINFO.is_enable = 1*/
      ORDER BY SINFO.sale_date  DESC
  </select>

  <!-- 根据数据权限查询销售单数据 -->
  <select id="getSalesTicketList" resultMap="saleListMap">
    SELECT
    SINFO.id,
    SINFO.sale_code,
    SINFO.sale_date,
    CSUPPLIER.cust_name,
    SINFO.currency,
    SINFO.exchange_rate,
    SINFO.total_sum,
    SINFO.discount_amount,
    SINFO.receivable_accoun,
    SINFO.cust_phone_num,
    SINFO.due_date,
    SINFO.payment_status AS paymentStatus,
    SINFO.invoice_code AS invoiceCode,
    DICTIONPRO.dict_name AS saleProject,
    UINFO.real_name AS userName,
    SINFO.user_code AS userCode,
    SINFO.create_user AS createUser,
    SINFO.collection_user_name AS collectionUserName,
    SINFO.sale_source AS saleSource,
    SINFO.is_receipt AS isReceipt,
    SINFO.subordinate_company_name AS subordinateCompanyName,
    SINFO.remarks AS remarks,
    GROUP_CONCAT(CONCAT(tsl.logistic_company_name, ':', tsl.freight_code) SEPARATOR ',') AS logistic
    FROM tab_sale_info SINFO
    LEFT JOIN tab_dictionary_info DICTIONPRO ON SINFO.sale_project=DICTIONPRO.dict_code AND DICTIONPRO.data_type='project_list'
    LEFT JOIN tab_customer_supplier CSUPPLIER ON SINFO.cust_code=CSUPPLIER.cust_code AND CSUPPLIER.cust_type IN (1, 3)
    LEFT JOIN tab_user_info UINFO ON SINFO.user_code = UINFO.user_code
    LEFT JOIN tab_sale_logistic_info tsl ON tsl.sale_code = SINFO.sale_code
    <where>
      ${ew.sqlSegment}
      <if test="query.startTime != null and query.startTime != ''">
        AND  <![CDATA[SINFO.sale_date >= DATE_FORMAT(#{query.startTime},'%Y-%m-%d %H:%i:%s')]]>
      </if>
      <if test="query.endTime != null and query.endTime != ''">
        AND  <![CDATA[SINFO.sale_date <= DATE_FORMAT(#{query.endTime},'%Y-%m-%d 23:59:59')]]>
      </if>

      <if test="query.saleCode != null and query.saleCode != ''">
        AND  SINFO.sale_code LIKE CONCAT('%', #{query.saleCode}, '%')
      </if>
      <if test="query.userCode != null and query.userCode != ''">
        AND  SINFO.user_code=#{query.userCode}
      </if>
      <if test="query.paymentStatus != null and query.paymentStatus != ''">
        AND  SINFO.payment_status=#{query.paymentStatus}
      </if>
      <if test="query.subordinateCompanyCode != null and query.subordinateCompanyCode != ''">
        AND  SINFO.subordinate_company_code=#{query.subordinateCompanyCode}
      </if>
      <if test="query.custCode != null and query.custCode != ''">
        AND  SINFO.cust_code=#{query.custCode}
      </if>
    </where>
    GROUP BY SINFO.sale_code
    ORDER BY SINFO.sale_date  DESC
  </select>

  <resultMap id="saleListMap" type="com.exx.dzj.entity.market.SaleInfo">
    <result column="id" property="id"/>
    <result column="remarks" property="remarks"/>
    <result column="subordinateCompanyName" property="subordinateCompanyName"/>
    <result column="isReceipt" property="isReceipt"/>
    <result column="saleSource" property="saleSource"/>
    <result column="createUser" property="createUser"/>
    <result column="userCode" property="userCode"/>
    <result column="userName" property="userName"/>
    <result column="saleSourceName" property="saleSourceName"/>
    <result column="saleProject" property="saleProject"/>
    <result column="invoiceCode" property="invoiceCode"/>
    <result column="paymentStatus" property="paymentStatus"/>
    <result column="due_date" property="dueDate"/>
    <result column="receivable_accoun" property="receivableAccoun"/>
    <result column="discount_amount" property="discountAmount"/>
    <result column="total_sum" property="totalSum"/>
    <result column="exchange_rate" property="exchangeRate"/>
    <result column="currency" property="currency"/>
    <result column="cust_name" property="custName"/>
    <result column="sale_date" property="saleDate"/>
    <result column="cust_phone_num" property="custPhoneNum"/>
    <result column="sale_code" property="saleCode"/>
    <result column="logistic" property="logistic"/>
    <!-- 查询关联收款记录 -->
    <!--<collection property="saleReceiptsDetailsList" column="sale_code" ofType="com.exx.dzj.entity.market.SaleReceiptsDetails" javaType="java.util.List"-->
                <!--select="com.exx.dzj.mapper.market.SaleReceiptsDetailsMapper.querySaleReceiptsDetailsList" />-->
    <!--&lt;!&ndash; 查询关联商品详情 &ndash;&gt;-->
    <!--<collection property="saleGoodsDetailBeanList" column="sale_code" ofType="com.exx.dzj.entity.market.SaleGoodsDetailBean" javaType="java.util.List"-->
                <!--select="com.exx.dzj.mapper.market.SaleGoodsDetailBeanMapper.querySaleGoodsDetailBeanList" />-->
    <!--<collection property="logisticsInfoList" column="sale_code" ofType="com.exx.dzj.entity.market.LogisticsInfo"
                javaType="java.util.List" select="logisticsInfoList"></collection>-->
  </resultMap>

  <select id="logisticsInfoList" parameterType="String" resultType="com.exx.dzj.entity.market.LogisticsInfo">
    SELECT
      id AS id, freight_code AS freihtCode, logistic_company_name AS logisticsCompamyName,
      selector_phone_num AS selectorPhoneNum, deliver_goods_time AS deliverGoodsTime, remark AS remark
    FROM tab_sale_logistic_info
    WHERE sale_code = #{saleCode}
  </select>

  <!-- 销售单详情 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="saleTicketMap">
    SELECT
      SINFO.id,
      SINFO.sale_code,
      SINFO.user_code ,
      SINFO.salesman_code ,
      IFNULL(SINFO.cust_code, '') AS custCode,
      SINFO.payment_term ,
      SINFO.subordinate_company_code ,
      IFNULL(CSUPPLIER.cust_name,'') AS custName,
      UINFO.user_name AS userName,
      UINFO.real_name AS realName,
      SINFO.sale_project,
      SINFO.cust_phone_num,
      DICTIONPRO.dict_name AS saleProjectName,
      IFNULL(SUM(collected_amount), 0) AS sumCollectedAmount,
      SINFO.sale_date ,
      SINFO.currency ,
      SINFO.exchange_rate ,
      SINFO.cust_order_code ,
      SINFO.delivery_address ,
      SINFO.invoice_code ,
      SINFO.bill_type ,
      SINFO.total_sum ,
      SINFO.discount_amount ,
      SINFO.receivable_accoun ,
      SINFO.receipt_num ,
      SINFO.collection_terms ,
      SINFO.account_period ,
      SINFO.due_date ,
      SINFO.is_enable ,
      SINFO.create_time ,
      SINFO.remarks ,
      SINFO.is_receipt ,
      SINFO.sale_source ,
      SINFO.create_user ,
      SINFO.collection_user_name,
      SINFO.payment_term ,
      SINFO.payment_status,
      CASE
        WHEN COUNT(SRDETAIL.sale_code) > 1
        THEN '1719240000000034'
        ELSE SRDETAIL.collection_account
        END collectedAmounts
    FROM tab_sale_info SINFO
    LEFT JOIN tab_dictionary_info DICTIONPRO ON SINFO.sale_project=DICTIONPRO.dict_code AND DICTIONPRO.data_type='project_list'
    LEFT JOIN tab_customer_supplier CSUPPLIER ON SINFO.cust_code=CSUPPLIER.cust_code
    LEFT JOIN tab_user_info UINFO ON SINFO.salesman_code = UINFO.salesman_code
    LEFT JOIN tab_sale_receipts_details SRDETAIL ON SINFO.sale_code=SRDETAIL.sale_code
    WHERE SINFO.id = #{id,jdbcType=INTEGER}
  </select>
  <resultMap id="saleTicketMap" type="com.exx.dzj.entity.market.SaleInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sale_code" property="saleCode" />
    <result column="cust_phone_num" property="custPhoneNum" />
    <result column="user_code" property="userCode" />
    <result column="salesman_code" jdbcType="VARCHAR" property="salesmanCode" />
    <result column="payment_term" jdbcType="VARCHAR" property="paymentTerm" />
    <result column="custCode" jdbcType="VARCHAR" property="custCode" />
    <result column="custName" jdbcType="VARCHAR" property="custName" />
    <result column="sale_project" jdbcType="VARCHAR" property="saleProject" />
    <result column="sale_date" jdbcType="DATE" property="saleDate" />
    <result column="currency" jdbcType="VARCHAR" property="currency" />
    <result column="exchange_rate" jdbcType="DOUBLE" property="exchangeRate" />
    <result column="cust_order_code" jdbcType="VARCHAR" property="custOrderCode" />
    <result column="delivery_address" jdbcType="VARCHAR" property="deliveryAddress" />
    <result column="invoice_code" jdbcType="VARCHAR" property="invoiceCode" />
    <result column="subordinate_company_code" jdbcType="VARCHAR" property="subordinateCompanyCode" />
    <result column="bill_type" jdbcType="VARCHAR" property="billType" />
    <result column="total_sum" jdbcType="DECIMAL" property="totalSum" />
    <result column="discount_amount" jdbcType="DECIMAL" property="discountAmount" />
    <result column="receivable_accoun" jdbcType="DECIMAL" property="receivableAccoun" />
    <result column="receipt_num" jdbcType="VARCHAR" property="receiptNum" />
    <result column="collection_terms" jdbcType="VARCHAR" property="collectionTerms" />
    <result column="account_period" jdbcType="INTEGER" property="accountPeriod" />
    <result column="due_date" jdbcType="DATE" property="dueDate" />
    <result column="is_enable" jdbcType="INTEGER" property="isEnable" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="is_receipt" jdbcType="INTEGER" property="isReceipt" />
    <result column="sale_source" jdbcType="VARCHAR" property="saleSource" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="collection_user_name" jdbcType="VARCHAR" property="collectionUserName" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="payment_status" jdbcType="VARCHAR" property="paymentStatus" />
    <!-- 查询关联收款记录 -->
    <collection property="saleReceiptsDetailsList" column="sale_code" ofType="com.exx.dzj.entity.market.SaleReceiptsDetails" javaType="java.util.List"
      select="com.exx.dzj.mapper.market.SaleReceiptsDetailsMapper.querySaleReceiptsDetailsList" />
    <!-- 查询关联商品详情 -->
    <collection property="saleGoodsDetailBeanList" column="sale_code" ofType="com.exx.dzj.entity.market.SaleGoodsDetailBean" javaType="java.util.List"
      select="com.exx.dzj.mapper.market.SaleGoodsDetailBeanMapper.querySaleGoodsDetailBeanList" />
  </resultMap>

  <resultMap id="PrintSalesTicketResult" type="com.exx.dzj.entity.market.SaleInfo">
    <result column="sale_code" jdbcType="VARCHAR" property="saleCode" />
    <result column="sale_date" jdbcType="DATE" property="saleDate" />
    <result column="real_name" property="realName" />
    <result column="cust_code" jdbcType="VARCHAR" property="custCode" />
    <result column="cust_name" jdbcType="VARCHAR" property="custName" />
    <result column="cust_phone_num" property="custPhoneNum" />
    <result column="link_man" property="linkMan" />
    <result column="total_sum" jdbcType="DECIMAL" property="totalSum" />
    <result column="discount_amount" jdbcType="DECIMAL" property="discountAmount" />
    <result column="receivable_accoun" jdbcType="DECIMAL" property="receivableAccoun" />
    <result column="receipt_num" jdbcType="VARCHAR" property="receiptNum" />
    <result column="delivery_address" jdbcType="VARCHAR" property="deliveryAddress" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="goods_num" property="goodsNum" />
    <result column="deliver_goods_time" property="deliverGoodsTime" />
    <collection property="saleGoodsDetailBeanList" column="sale_code" ofType="com.exx.dzj.entity.market.SaleGoodsDetailBean" javaType="java.util.List"
                select="com.exx.dzj.mapper.market.SaleInfoMapper.querySaleGoodsList" />
  </resultMap>

  <resultMap id="saleGoodsDetailBeanMap" type="com.exx.dzj.entity.market.SaleGoodsDetailBean">
    <result property="stockCode" jdbcType="VARCHAR" column="stock_code" />
    <result property="stockName" jdbcType="VARCHAR" column="stock_name" />
    <result property="goodsNum" jdbcType="INTEGER" column="goods_num" />
    <result property="unitPrice" jdbcType="VARCHAR" column="unit_price" />
    <result property="realSellPrice" jdbcType="VARCHAR" column="real_sell_price" />
    <result property="discountRate" jdbcType="VARCHAR" column="discount_rate" />
    <result property="meterUnit" jdbcType="VARCHAR" column="meter_unit" />
    <result property="salesVolume" jdbcType="DECIMAL" column="sales_volume" />
    <result property="discountAmount" jdbcType="DECIMAL" column="discount_amount" />
    <result property="remarks" jdbcType="VARCHAR" column="remarks" />
  </resultMap>

  <!-- 查询销售单打印 -->
  <select id="printSalesTicket" resultMap="PrintSalesTicketResult" parameterType="java.util.List">
    SELECT
      ts.sale_code,
      ts.sale_date,
      CONCAT_WS(
      ' ',
      tu.salesman_code,
      tu.real_name
      ) AS real_name,
      ts.cust_code,
      tc.cust_name,
      IFNULL(
      ts.cust_phone_num,
      tw.phone_num
      ) cust_phone_num,
      IFNULL(tw.link_man, '无') AS link_man,
      IFNULL(ts.total_sum, IFNULL(ts.receivable_accoun, 0.00)) total_sum,
      IFNULL(ts.discount_amount, 0.00) discount_amount,
      IFNULL(ts.receivable_accoun, 0.00) receivable_accoun,
      IFNULL(tr.received_amoun, 0.00) received_amoun,
      ts.delivery_address,
      ts.remarks,
      tt.goods_num,
      MIN(tl.deliver_goods_time) AS deliver_goods_time
    FROM
      tab_sale_info ts
    INNER JOIN (
      SELECT
      tg.sale_code,
      SUM(tg.goods_num) goods_num
      FROM
      tab_sale_goods_detail tg
    <where>
      <if test="saleCodes!=null">
        <foreach collection="saleCodes" item="item" open="(" separator="OR" close=")">
          tg.sale_code = #{item,jdbcType=VARCHAR}
        </foreach>
      </if>
    </where>
    GROUP BY
      tg.sale_code
    ) tt ON tt.sale_code = ts.sale_code
    INNER JOIN tab_customer_supplier tc ON ts.cust_code = tc.cust_code
      AND (
      tc.cust_type = 1
      OR tc.cust_type = 3
      )
    LEFT JOIN (
      SELECT
      td.sale_code,
      SUM(td.collected_amount) received_amoun
      FROM
      tab_sale_receipts_details td
    <where>
      <if test="saleCodes!=null">
        <foreach collection="saleCodes" item="item" open="(" separator="OR" close=")">
          td.sale_code = #{item,jdbcType=VARCHAR}
        </foreach>
      </if>
    </where>
    GROUP BY
      td.sale_code
    ) tr ON tr.sale_code = ts.sale_code
    LEFT JOIN tab_sale_logistic_info tl ON tl.sale_code = ts.sale_code
    LEFT JOIN tab_contact_way tw ON tc.cust_code = tw.cust_code
    LEFT JOIN tab_user_info tu ON tu.user_code = ts.user_code
    WHERE
      ts.is_enable = 1
    <if test="saleCodes!=null">
      AND
      <foreach collection="saleCodes" item="item" open="(" separator="OR" close=")">
        ts.sale_code = #{item,jdbcType=VARCHAR}
      </foreach>
    </if>
    GROUP BY ts.sale_code
  </select>

  <select id="querySaleGoodsList" resultMap="saleGoodsDetailBeanMap" parameterType="String">
    SELECT
        td.stock_code,
        td.stock_name,
        td.goods_num,
        ti.meter_unit,
        td.unit_price,
        IFNULL(td.real_sell_price, td.unit_price) real_sell_price,
        (td.unit_price - IFNULL(td.real_sell_price, td.unit_price)) as discount_rate,
        td.sales_volume,
        td.discount_amount,
        td.remarks
    FROM
        tab_sale_goods_detail td
    INNER JOIN tab_stock_info ti ON td.stock_code = ti.stock_code
    WHERE
        td.sale_code = #{saleCode}
  </select>
    
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tab_sale_info
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByExample" parameterType="com.exx.dzj.entity.market.SaleInfoExample">
    delete from tab_sale_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.exx.dzj.entity.market.SaleInfo">
    insert into tab_sale_info (id, sale_code, user_code,
      salesman_code, cust_code, sale_project,
      sale_date, sales_order_code, currency,
      exchange_rate, delivery_order_code, cust_order_code,
      delivery_address, invoice_code, bill_type,
      total_sum, discount_amount, receivable_accoun,
      received_amoun, receipt_num, collection_terms,
      account_period, due_date, is_enable,cust_phone_num,
      remarks, create_time, create_user,
      update_time, update_user)
    values (#{id,jdbcType=INTEGER}, #{saleCode,jdbcType=VARCHAR}, #{userCode,jdbcType=VARCHAR},
      #{salesmanCode,jdbcType=VARCHAR}, #{custCode,jdbcType=VARCHAR}, #{saleProject,jdbcType=VARCHAR},
      #{saleDate,jdbcType=DATE}, #{salesOrderCode,jdbcType=VARCHAR}, #{currency,jdbcType=VARCHAR},
      #{exchangeRate,jdbcType=DOUBLE}, #{deliveryOrderCode,jdbcType=VARCHAR}, #{custOrderCode,jdbcType=VARCHAR},
      #{deliveryAddress,jdbcType=VARCHAR}, #{invoiceCode,jdbcType=VARCHAR}, #{billType,jdbcType=VARCHAR},
      #{totalSum,jdbcType=DECIMAL}, #{discountAmount,jdbcType=DECIMAL}, #{receivableAccoun,jdbcType=DECIMAL},
      #{receivedAmoun,jdbcType=DECIMAL}, #{receiptNum,jdbcType=VARCHAR}, #{collectionTerms,jdbcType=VARCHAR},
      #{accountPeriod,jdbcType=INTEGER}, #{dueDate,jdbcType=DATE}, #{isEnable,jdbcType=INTEGER}, #{custPhoneNum,jdbcType=INTEGER},
      #{remarks,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR},
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR})
  </insert>

  <!-- 新增销售单 -->
  <insert id="insertSelective" parameterType="com.exx.dzj.entity.market.SaleInfo">
    insert into tab_sale_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="saleCode != null">
        sale_code,
      </if>
      <if test="userCode != null">
        user_code,
      </if>
      <if test="salesmanCode != null">
        salesman_code,
      </if>
      <if test="custCode != null">
        cust_code,
      </if>
      <if test="saleProject != null">
        sale_project,
      </if>
      <if test="saleDate != null">
        sale_date,
      </if>
      <if test="salesOrderCode != null">
        sales_order_code,
      </if>
      <if test="currency != null">
        currency,
      </if>
      <if test="exchangeRate != null">
        exchange_rate,
      </if>
      <if test="deliveryOrderCode != null">
        delivery_order_code,
      </if>
      <if test="custOrderCode != null">
        cust_order_code,
      </if>
      <if test="deliveryAddress != null">
        delivery_address,
      </if>
      <if test="invoiceCode != null">
        invoice_code,
      </if>
      <if test="billType != null">
        bill_type,
      </if>
      <if test="totalSum != null">
        total_sum,
      </if>
      <if test="discountAmount != null">
        discount_amount,
      </if>
      <if test="receivableAccoun != null">
        receivable_accoun,
      </if>
      <if test="receivedAmoun != null">
        received_amoun,
      </if>
      <if test="receiptNum != null">
        receipt_num,
      </if>
      <if test="collectionTerms != null">
        collection_terms,
      </if>
      <if test="accountPeriod != null">
        account_period,
      </if>
      <if test="dueDate != null">
        due_date,
      </if>
      <if test="isEnable != null">
        is_enable,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="paymentTerm != null">
        payment_term,
      </if>
      <if test="paymentStatus != null">
        payment_status,
      </if>
      <if test="collectionUserName != null">
        collection_user_name,
      </if>
      <if test="saleTicketType != null">
        sale_ticket_type,
      </if>
      <if test="saleSource != null and saleSource != ''">
        sale_source,
      </if>
      <if test="isReceipt != null">
        is_receipt,
      </if>
      <if test="custPhoneNum != null and custPhoneNum != ''">
        cust_phone_num,
      </if>
      create_time
    </trim>
    <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
      <if test="saleCode != null">
        #{saleCode,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="salesmanCode != null">
        #{salesmanCode,jdbcType=VARCHAR},
      </if>
      <if test="custCode != null">
        #{custCode,jdbcType=VARCHAR},
      </if>
      <if test="saleProject != null">
        #{saleProject,jdbcType=VARCHAR},
      </if>
      <if test="saleDate != null">
        #{saleDate,jdbcType=DATE},
      </if>
      <if test="salesOrderCode != null">
        #{salesOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="exchangeRate != null">
        #{exchangeRate,jdbcType=DOUBLE},
      </if>
      <if test="deliveryOrderCode != null">
        #{deliveryOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="custOrderCode != null">
        #{custOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="deliveryAddress != null">
        #{deliveryAddress,jdbcType=VARCHAR},
      </if>
      <if test="invoiceCode != null">
        #{invoiceCode,jdbcType=VARCHAR},
      </if>
      <if test="billType != null">
        #{billType,jdbcType=VARCHAR},
      </if>
      <if test="totalSum != null">
        #{totalSum,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null">
        #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="receivableAccoun != null">
        #{receivableAccoun,jdbcType=DECIMAL},
      </if>
      <if test="receivedAmoun != null">
        #{receivedAmoun,jdbcType=DECIMAL},
      </if>
      <if test="receiptNum != null">
        #{receiptNum,jdbcType=VARCHAR},
      </if>
      <if test="collectionTerms != null">
        #{collectionTerms,jdbcType=VARCHAR},
      </if>
      <if test="accountPeriod != null">
        #{accountPeriod,jdbcType=INTEGER},
      </if>
      <if test="dueDate != null">
        #{dueDate,jdbcType=DATE},
      </if>
      <if test="isEnable != null">
        #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="paymentTerm != null">
        #{paymentTerm,jdbcType=VARCHAR},
      </if>
      <if test="paymentStatus != null">
        #{paymentStatus,jdbcType=VARCHAR},
      </if>
      <if test="collectionUserName != null">
        #{collectionUserName,jdbcType=VARCHAR},
      </if>
      <if test="saleTicketType != null">
        #{saleTicketType},
      </if>
      <if test="saleSource != null and saleSource != ''">
        #{saleSource},
      </if>
      <if test="isReceipt != null">
        #{isReceipt},
      </if>
      <if test="custPhoneNum != null and custPhoneNum != ''">
        #{custPhoneNum},
      </if>
      sysdate()
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.exx.dzj.entity.market.SaleInfoExample" resultType="java.lang.Long">
    select count(*) from tab_sale_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update tab_sale_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.saleCode != null">
        sale_code = #{record.saleCode,jdbcType=VARCHAR},
      </if>
      <if test="record.userCode != null">
        user_code = #{record.userCode,jdbcType=VARCHAR},
      </if>
      <if test="record.salesmanCode != null">
        salesman_code = #{record.salesmanCode,jdbcType=VARCHAR},
      </if>
      <if test="record.custCode != null">
        cust_code = #{record.custCode,jdbcType=VARCHAR},
      </if>
      <if test="record.saleProject != null">
        sale_project = #{record.saleProject,jdbcType=VARCHAR},
      </if>
      <if test="record.saleDate != null">
        sale_date = #{record.saleDate,jdbcType=DATE},
      </if>
      <if test="record.salesOrderCode != null">
        sales_order_code = #{record.salesOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.currency != null">
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
      <if test="record.exchangeRate != null">
        exchange_rate = #{record.exchangeRate,jdbcType=DOUBLE},
      </if>
      <if test="record.deliveryOrderCode != null">
        delivery_order_code = #{record.deliveryOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.custOrderCode != null">
        cust_order_code = #{record.custOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.deliveryAddress != null">
        delivery_address = #{record.deliveryAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceCode != null">
        invoice_code = #{record.invoiceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.billType != null">
        bill_type = #{record.billType,jdbcType=VARCHAR},
      </if>
      <if test="record.totalSum != null">
        total_sum = #{record.totalSum,jdbcType=DECIMAL},
      </if>
      <if test="record.discountAmount != null">
        discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.receivableAccoun != null">
        receivable_accoun = #{record.receivableAccoun,jdbcType=DECIMAL},
      </if>
      <if test="record.receivedAmoun != null">
        received_amoun = #{record.receivedAmoun,jdbcType=DECIMAL},
      </if>
      <if test="record.receiptNum != null">
        receipt_num = #{record.receiptNum,jdbcType=VARCHAR},
      </if>
      <if test="record.collectionTerms != null">
        collection_terms = #{record.collectionTerms,jdbcType=VARCHAR},
      </if>
      <if test="record.accountPeriod != null">
        account_period = #{record.accountPeriod,jdbcType=INTEGER},
      </if>
      <if test="record.dueDate != null">
        due_date = #{record.dueDate,jdbcType=DATE},
      </if>
      <if test="record.isEnable != null">
        is_enable = #{record.isEnable,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    update tab_sale_info
    set id = #{record.id,jdbcType=INTEGER},
      sale_code = #{record.saleCode,jdbcType=VARCHAR},
      user_code = #{record.userCode,jdbcType=VARCHAR},
      salesman_code = #{record.salesmanCode,jdbcType=VARCHAR},
      cust_code = #{record.custCode,jdbcType=VARCHAR},
      sale_project = #{record.saleProject,jdbcType=VARCHAR},
      sale_date = #{record.saleDate,jdbcType=DATE},
      sales_order_code = #{record.salesOrderCode,jdbcType=VARCHAR},
      currency = #{record.currency,jdbcType=VARCHAR},
      exchange_rate = #{record.exchangeRate,jdbcType=DOUBLE},
      delivery_order_code = #{record.deliveryOrderCode,jdbcType=VARCHAR},
      cust_order_code = #{record.custOrderCode,jdbcType=VARCHAR},
      delivery_address = #{record.deliveryAddress,jdbcType=VARCHAR},
      invoice_code = #{record.invoiceCode,jdbcType=VARCHAR},
      bill_type = #{record.billType,jdbcType=VARCHAR},
      total_sum = #{record.totalSum,jdbcType=DECIMAL},
      discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      receivable_accoun = #{record.receivableAccoun,jdbcType=DECIMAL},
      received_amoun = #{record.receivedAmoun,jdbcType=DECIMAL},
      receipt_num = #{record.receiptNum,jdbcType=VARCHAR},
      collection_terms = #{record.collectionTerms,jdbcType=VARCHAR},
      account_period = #{record.accountPeriod,jdbcType=INTEGER},
      due_date = #{record.dueDate,jdbcType=DATE},
      is_enable = #{record.isEnable,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.exx.dzj.entity.market.SaleInfo">
    update tab_sale_info
    <set>
      <if test="saleCode != null">
        sale_code = #{saleCode,jdbcType=VARCHAR},
      </if>
      <if test="custPhoneNum != null and custPhoneNum != ''">
        cust_phone_num = #{custPhoneNum,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="salesmanCode != null">
        salesman_code = #{salesmanCode,jdbcType=VARCHAR},
      </if>
      <if test="custCode != null">
        cust_code = #{custCode,jdbcType=VARCHAR},
      </if>
      <if test="saleProject != null">
        sale_project = #{saleProject,jdbcType=VARCHAR},
      </if>
      <if test="saleDate != null">
        sale_date = #{saleDate,jdbcType=DATE},
      </if>
      <if test="salesOrderCode != null">
        sales_order_code = #{salesOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="exchangeRate != null">
        exchange_rate = #{exchangeRate,jdbcType=DOUBLE},
      </if>
      <if test="deliveryOrderCode != null">
        delivery_order_code = #{deliveryOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="custOrderCode != null">
        cust_order_code = #{custOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="deliveryAddress != null">
        delivery_address = #{deliveryAddress,jdbcType=VARCHAR},
      </if>
      <if test="invoiceCode != null">
        invoice_code = #{invoiceCode,jdbcType=VARCHAR},
      </if>
      <if test="billType != null">
        bill_type = #{billType,jdbcType=VARCHAR},
      </if>
      <if test="totalSum != null">
        total_sum = #{totalSum,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null">
        discount_amount = #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="receivableAccoun != null">
        receivable_accoun = #{receivableAccoun,jdbcType=DECIMAL},
      </if>
      <if test="receivedAmoun != null">
        received_amoun = #{receivedAmoun,jdbcType=DECIMAL},
      </if>
      <if test="receiptNum != null">
        receipt_num = #{receiptNum,jdbcType=VARCHAR},
      </if>
      <if test="collectionTerms != null">
        collection_terms = #{collectionTerms,jdbcType=VARCHAR},
      </if>
      <if test="accountPeriod != null">
        account_period = #{accountPeriod,jdbcType=INTEGER},
      </if>
      <if test="dueDate != null">
        due_date = #{dueDate,jdbcType=DATE},
      </if>
      <if test="isEnable != null">
        is_enable = #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="paymentStatus != null">
        payment_status = #{paymentStatus,jdbcType=VARCHAR},
      </if>
      <if test="paymentTerm != null">
        payment_term = #{paymentTerm,jdbcType=VARCHAR},
      </if>
      <if test="saleSource != null and saleSource!= ''">
        sale_source = #{saleSource,jdbcType=VARCHAR},
      </if>
      <if test="isReceipt != null">
        is_receipt = #{isReceipt,jdbcType=INTEGER},
      </if>
      update_time = SYSDATE()
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exx.dzj.entity.market.SaleInfo">
    update tab_sale_info
    set sale_code = #{saleCode,jdbcType=VARCHAR},
      user_code = #{userCode,jdbcType=VARCHAR},
      salesman_code = #{salesmanCode,jdbcType=VARCHAR},
      cust_code = #{custCode,jdbcType=VARCHAR},
      sale_project = #{saleProject,jdbcType=VARCHAR},
      sale_date = #{saleDate,jdbcType=DATE},
      sales_order_code = #{salesOrderCode,jdbcType=VARCHAR},
      currency = #{currency,jdbcType=VARCHAR},
      exchange_rate = #{exchangeRate,jdbcType=DOUBLE},
      delivery_order_code = #{deliveryOrderCode,jdbcType=VARCHAR},
      cust_order_code = #{custOrderCode,jdbcType=VARCHAR},
      delivery_address = #{deliveryAddress,jdbcType=VARCHAR},
      invoice_code = #{invoiceCode,jdbcType=VARCHAR},
      bill_type = #{billType,jdbcType=VARCHAR},
      total_sum = #{totalSum,jdbcType=DECIMAL},
      discount_amount = #{discountAmount,jdbcType=DECIMAL},
      receivable_accoun = #{receivableAccoun,jdbcType=DECIMAL},
      received_amoun = #{receivedAmoun,jdbcType=DECIMAL},
      receipt_num = #{receiptNum,jdbcType=VARCHAR},
      collection_terms = #{collectionTerms,jdbcType=VARCHAR},
      account_period = #{accountPeriod,jdbcType=INTEGER},
      due_date = #{dueDate,jdbcType=DATE},
      is_enable = #{isEnable,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <delete id="logisticsInfoDel">
      DELETE FROM tab_sale_logistic_info WHERE id = #{id}
  </delete>

  <select id="querySumSalesOnDay" resultType="com.exx.dzj.entity.market.SaleInfo">
    SELECT SUM(receivable_accoun) AS receivableAccoun, subordinate_company_code AS subordinateCompanyCode,
      subordinate_company_name AS subordinateCompanyName
      FROM tab_sale_info sinfo
	  WHERE sinfo.sale_date BETWEEN DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s') AND DATE_FORMAT(CURDATE(),'%Y-%m-%d 23:59:59')
	        GROUP BY subordinate_company_code ORDER BY receivableAccoun DESC
  </select>

  <select id="querySumSalesOnMonth" resultType="com.exx.dzj.entity.market.SaleInfo">
    SELECT SUM(receivable_accoun) AS receivableAccoun, subordinate_company_code AS subordinateCompanyCode,
      subordinate_company_name AS subordinateCompanyName
    FROM tab_sale_info sinfo
	  WHERE sinfo.sale_date BETWEEN date_add(curdate(), INTERVAL - DAY(curdate())+1 DAY)
                            AND date_add(curdate() - DAY(curdate()) +1, INTERVAL 1 MONTH )
                            GROUP BY subordinate_company_code ORDER BY receivableAccoun DESC
  </select>

    <select id="queryAdditionalSumSalesOnDay" resultType="com.exx.dzj.entity.market.SaleInfo">
    SELECT
        IFNULL(
        /*IFNULL(SUM((SELECT SUM(aa.goods_num) FROM tab_sale_goods_detail aa WHERE aa.sale_code = s.sale_code AND aa.stock_code REGEXP '^cb')),0)
        +*/
        sum((SELECT
                sum(price.standard_buy_price * bb.goods_num)
              FROM tab_sale_goods_detail bb
							LEFT JOIN tab_stock_num_price price ON bb.stock_code = price.stock_code
								WHERE bb.sale_code = s.sale_code)), 0) AS receivableAccoun
				, subordinate_company_code AS subordinateCompanyCode, subordinate_company_name AS subordinateCompanyName
    FROM tab_sale_info s
    WHERE s.sale_date BETWEEN DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s') AND DATE_FORMAT(CURDATE(),'%Y-%m-%d 23:59:59')
					GROUP BY subordinate_company_code ORDER BY receivableAccoun DESC
  </select>

    <select id="queryAdditionalSumSalesOnMonth" resultType="com.exx.dzj.entity.market.SaleInfo">
   SELECT
        IFNULL(
        /*IFNULL(SUM((SELECT SUM(aa.goods_num) FROM tab_sale_goods_detail aa WHERE aa.sale_code = s.sale_code AND aa.stock_code REGEXP '^cb')),0)
        +*/
        sum((SELECT
                sum(bb.goods_num * price.standard_buy_price)
              FROM tab_sale_goods_detail bb
							LEFT JOIN tab_stock_num_price price ON bb.stock_code = price.stock_code
								WHERE bb.sale_code = s.sale_code)), 0) AS receivableAccoun,
				subordinate_company_code AS subordinateCompanyCode, subordinate_company_name AS subordinateCompanyName
    FROM tab_sale_info s
    WHERE s.sale_date BETWEEN date_add(curdate(), INTERVAL - DAY(curdate())+1 DAY)
                      AND date_add(curdate() - DAY(curdate()) +1, INTERVAL 1 MONTH )
                      GROUP BY subordinate_company_code ORDER BY receivableAccoun DESC
  </select>

  <select id="querySumSalesOnYear" resultType="com.exx.dzj.entity.market.SaleInfo">
    /*SELECT SUM(receivable_accoun) FROM tab_sale_info sinfo
	  WHERE sinfo.sale_date BETWEEN DATE_SUB(CURDATE(),INTERVAL dayofyear(now())-1 DAY) AND concat(YEAR(now()),'-12-31')*/

    SELECT SUM(receivable_accoun) AS receivableAccoun,
	  subordinate_company_code AS subordinateCompanyCode, subordinate_company_name AS subordinateCompanyName
	FROM tab_sale_info sinfo
	  WHERE sinfo.sale_date BETWEEN DATE_SUB(CURDATE(),INTERVAL dayofyear(now())-1 DAY) AND concat(YEAR(now()),'-12-31')
            GROUP BY subordinate_company_code ORDER BY receivableAccoun DESC
  </select>

  <select id="querySalesTop" resultMap="salesTopMap">
    SELECT
      u.real_name,SUM(s.receivable_accoun) AS receivable_accoun
    FROM tab_sale_info s
    LEFT JOIN tab_user_info u ON s.salesman_code = u.salesman_code
    WHERE
    s.sale_date
    <if test="type == 'day'">
      BETWEEN DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s') AND DATE_FORMAT(CURDATE(),'%Y-%m-%d 23:59:59')
    </if>
    <if test="type == 'month'">
      BETWEEN concat(date_format(LAST_DAY(now()),'%Y-%m-'),'01') AND LAST_DAY(now())
    </if>

    <!--DATE_FORMAT(s.sale_date, '%Y-%m-%d') = DATE_FORMAT('2019-03-16', '%Y-%m-%d')  DATE_FORMAT(sysdate(), '%Y-%m-%d')-->
    AND u.real_name IS NOT NULL
    GROUP BY s.salesman_code,u.real_name
    ORDER BY SUM(s.receivable_accoun) DESC
    LIMIT 10
  </select>
  
  <resultMap id="salesTopMap" type="com.exx.dzj.entity.market.SaleInfo">
    <result column="real_name" property="realName"/>
    <result column="receivable_accoun" property="receivableAccoun"/>
  </resultMap>
  
  <select id="salesUncollectedTop" resultMap="salesUncollectedTopMap">
    <!--SELECT u.salesman_code,u.real_name,-->
	  <!--(sum(s.receivable_accoun) - (select sum(collected_amount) from tab_sale_receipts_details p where p.sale_code = s.sale_code)) AS receivable_accoun-->
    <!--FROM tab_sale_info s-->
    <!--LEFT JOIN tab_user_info u ON s.salesman_code = u.salesman_code-->
    <!--WHERE DATE_FORMAT(s.sale_date, '%Y-%m-%d') = DATE_FORMAT('2019-03-16', '%Y-%m-%d')        &lt;!&ndash; DATE_FORMAT(sysdate(), '%Y-%m-%d')&ndash;&gt;-->
    <!--AND s.salesman_code = u.user_code-->
    <!--GROUP BY s.salesman_code,u.real_name-->
    <!--ORDER BY receivable_accoun DESC-->
    <!--LIMIT 10-->

    SELECT u.salesman_code,u.real_name,
    (SUM(s.receivable_accoun) - (SELECT SUM(collected_amount) FROM tab_sale_receipts_details p WHERE p.sale_code = s.sale_code)) AS receivable_accoun
    FROM tab_sale_info s
    LEFT JOIN tab_user_info u ON s.salesman_code = u.salesman_code
    /*WHERE DATE_FORMAT(s.sale_date, '%Y-%m-%d') = DATE_FORMAT('2019-03-16', '%Y-%m-%d')*/
    WHERE s.sale_date BETWEEN date_add(curdate(),INTERVAL - DAY(curdate())+1 DAY) AND date_add(curdate() - DAY(curdate()) +1,INTERVAL 1 MONTH)
    AND s.salesman_code = u.user_code
    GROUP BY s.salesman_code,u.real_name
    ORDER BY receivable_accoun DESC
    LIMIT 10
  </select>

  <resultMap id="salesUncollectedTopMap" type="com.exx.dzj.entity.market.SaleInfo">
    <result column="real_name" property="realName"/>
    <result column="receivable_accoun" property="receivableAccoun"/>
  </resultMap>

  <select id="querySalesTicketTop" resultMap="saleTicketTopMap">
    SELECT u.real_name,s.salesman_code, COUNT(s.salesman_code) AS countTicket
    FROM tab_sale_info s
    LEFT JOIN tab_user_info u ON s.salesman_code = u.salesman_code
        WHERE s.sale_date BETWEEN DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s')
									 AND DATE_FORMAT(CURDATE(),'%Y-%m-%d 23:59:59')
				GROUP BY s.salesman_code
				ORDER BY countTicket DESC
				LIMIT 10
  </select>
  
  <resultMap id="saleTicketTopMap" type="com.exx.dzj.entity.market.SaleInfo">
    <result column="real_name" property="realName"/>
    <result column="countTicket" property="countTicket"/>
  </resultMap>
  
  <select id="queryCustomerSalesToday" parameterType="com.exx.dzj.entity.market.SaleInfo" resultType="com.exx.dzj.entity.market.SaleInfo">
    SELECT SINFO.id AS id, SINFO.sale_code AS saleCode, UINFO.real_name AS realName, CS.cust_name AS custName FROM tab_sale_info SINFO
		LEFT JOIN tab_user_info UINFO ON SINFO.salesman_code = UINFO.salesman_code
		LEFT JOIN tab_customer_supplier CS ON SINFO.cust_code = CS.cust_code
        WHERE SINFO.cust_code = #{custCode} AND DATE_FORMAT(SINFO.sale_date, '%Y-%m-%d') = DATE_FORMAT(#{saleDate}, '%Y-%m-%d')
  </select>

    <select id="querySaleGoodsTop" resultType="com.exx.dzj.entity.market.SaleGoodsTop">
        SELECT
          SGD.stock_code AS stockCode, SUM(SGD.goods_num) AS goodsNum, STINFO.stock_name AS stockName
        FROM tab_sale_info SINFO
            LEFT JOIN tab_sale_goods_detail SGD ON SINFO.sale_code = SGD.sale_code
            LEFT JOIN tab_stock_info STINFO ON STINFO.stock_code = SGD.stock_code
            WHERE 1=1 AND SINFO.sale_date
            <if test="type == 'day'">
                BETWEEN DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s') AND DATE_FORMAT(CURDATE(),'%Y-%m-%d 23:59:59')
            </if>
            <if test="type == 'week'">
                BETWEEN date_sub(curdate(),INTERVAL WEEKDAY(curdate()) + 1 DAY) AND date_sub(curdate(),INTERVAL WEEKDAY(curdate()) - 5 DAY)
            </if>
            <if test="type == 'month'">
                BETWEEN concat(date_format(LAST_DAY(now()),'%Y-%m-'),'01') AND LAST_DAY(now())
            </if>
            AND STINFO.stock_name IS NOT NULL
            GROUP BY SGD.stock_code ORDER BY goodsNum DESC LIMIT 20
    </select>

      <select id="querySubordinateCompanySelect" resultType="com.exx.dzj.entity.market.SaleInfo">
        SELECT subordinate_company_code AS subordinateCompanyCode, subordinate_company_name AS subordinateCompanyName
          FROM tab_sale_info where subordinate_company_code is not null GROUP BY subordinate_company_code
      </select>

      <select id="querySaleBySaleCode" resultType="int">
        SELECT COUNT(1) FROM tab_sale_info WHERE sale_code = #{saleCode}
      </select>

  <update id="updateSalesmanSubordinateCompany" parameterType="com.exx.dzj.entity.market.SaleInfo">
    UPDATE tab_sale_info SET
      subordinate_company_code = #{subordinateCompanyCode},
      subordinate_company_name = #{subordinateCompanyName}
    WHERE sale_code = #{saleCode}

  </update>
    

  <!--<select id="querySalesListForIds" resultType="com.exx.dzj.entity.market.SaleListInfo" parameterType="com.exx.dzj.entity.market.SaleInfoQuery">-->
  <select id="querySalesListForIds" resultMap="saleListInfoMap" parameterType="com.exx.dzj.entity.market.SaleInfoQuery">
    SELECT
    SINFO.sale_code,
    SINFO.receivable_accoun,
    SINFO.sale_date AS saleDate,
    SINFO.payment_status AS paymentStatus,
    CSUPPLIER.cust_name AS custName,
    SINFO.currency AS currency,
    SINFO.cust_phone_num AS custPhoneNum,
    SINFO.exchange_rate AS exchangeRate,
    CONCAT(SINFO.user_code, UINFO.real_name) AS salesmanName,
    DICTIONPRO.dict_name AS saleProject,
    SINFO.delivery_address AS deliveryAddress,
    SINFO.remarks AS saleRemark,
    /* CASE
    WHEN SINFO.is_receipt = 0 THEN '未签收'
    WHEN SINFO.is_receipt = 1 THEN '已签收'
    WHEN SINFO.is_receipt = 2 THEN '其他'
    END isReceipt,*/
    SINFO.subordinate_company_name AS subordinateCompanyName,
    SINFO.discount_amount AS discountAmount,
    SINFO.collection_terms AS collectionTerms,
    SINFO.account_period AS accountPeriod,
    SINFO.invoice_code AS invoiceCode,
    SINFO.collection_user_name AS collectionUserName,
    SINFO.due_date AS dueDate,
    SINFO.sale_source AS saleSource,
    SINFO.is_receipt AS isReceipt
    FROM tab_sale_info SINFO
    LEFT JOIN tab_dictionary_info DICTIONPRO ON SINFO.sale_project=DICTIONPRO.dict_code AND DICTIONPRO.data_type='project_list'
    /*      LEFT JOIN tab_sale_goods_detail sgoods ON SINFO.sale_code = sgoods.sale_code
    LEFT JOIN tab_sale_receipts_details srd ON SINFO.sale_code = srd.sale_code*/
    LEFT JOIN tab_customer_supplier CSUPPLIER ON SINFO.cust_code=CSUPPLIER.cust_code AND CSUPPLIER.cust_type IN (1, 3)
    LEFT JOIN tab_user_info UINFO ON SINFO.salesman_code = UINFO.salesman_code
    WHERE 1=1
      <if test="startTime != null and startTime != ''">
        AND  <![CDATA[SINFO.sale_date >= DATE_FORMAT(#{startTime},'%Y-%m-%d %H:%i:%s')]]>
      </if>
      <if test="endTime != null and endTime != ''">
        AND  <![CDATA[SINFO.sale_date <= DATE_FORMAT(#{endTime},'%Y-%m-%d 23:59:59')]]>
      </if>

      <if test="saleCode != null and saleCode != ''">
        AND  SINFO.sale_code LIKE CONCAT(#{saleCode}, '%')
      </if>
      <if test="salesmanCode != null and salesmanCode != ''">
        AND  SINFO.salesman_code=#{salesmanCode}
      </if>
      <if test="paymentStatus != null and paymentStatus != ''">
        AND  SINFO.payment_status=#{paymentStatus}
      </if>
      <if test="subordinateCompanyCode != null and subordinateCompanyCode != ''">
        AND  SINFO.subordinate_company_code=#{subordinateCompanyCode}
      </if>
      <if test="custCode != null and custCode != ''">
        AND  SINFO.cust_code=#{custCode}
      </if>
      <if test="idList.size() > 0">
        AND SINFO.id IN
        <foreach collection="idList" item="id" separator="," open="(" close=")" index="index">
          #{id}
        </foreach>
      </if>
      ORDER BY SINFO.sale_date  DESC
    </select>

  <resultMap id="saleListInfoMap" type="com.exx.dzj.entity.market.SaleListInfo">
    <result column="sale_code" property="saleCode"/>
    <result column="receivable_accoun" property="receivableAccoun"/>
    <result column="saleDate" property="saleDate"/>
    <result column="paymentStatus" property="paymentStatus"/>
    <result column="custName" property="custName"/>
    <result column="currency" property="currency"/>
    <result column="custPhoneNum" property="custPhoneNum"/>
    <result column="exchangeRate" property="exchangeRate"/>
    <result column="salesmanName" property="salesmanName"/>
    <result column="saleProject" property="saleProject"/>
    <result column="deliveryAddress" property="deliveryAddress"/>
    <result column="saleRemark" property="saleRemark"/>
    <result column="subordinateCompanyName" property="subordinateCompanyName"/>
    <result column="discountAmount" property="discountAmount"/>
    <result column="collectionTerms" property="collectionTerms"/>
    <result column="accountPeriod" property="accountPeriod"/>
<!--    <result column="invoiceCode" property="invoiceCode"/>-->
     <result column="collectionUserName" property="collectionUserName"/>
    <result column="dueDate" property="dueDate"/>
<!--    <result column="saleSource" property="saleSource"/>-->
    <result column="isReceipt" property="isReceipt"/>
    <!-- 查询关联收款记录 -->
    <collection property="saleReceiptsDetailsList" column="sale_code" ofType="com.exx.dzj.entity.market.SaleReceiptsDetails" javaType="java.util.List"
                select="com.exx.dzj.mapper.market.SaleReceiptsDetailsMapper.querySaleReceiptsDetailsList" />
    <!-- 查询关联商品详情 -->
    <collection property="saleGoodsDetailBeanList" column="sale_code" ofType="com.exx.dzj.entity.market.SaleGoodsDetailBean" javaType="java.util.List"
                select="com.exx.dzj.mapper.market.SaleGoodsDetailBeanMapper.querySaleGoodsDetailBeanList" />
  </resultMap>

  <select id="exportSaleList" resultMap="exportSaleListMap" parameterType="com.exx.dzj.entity.market.SaleInfoQuery">
    SELECT
      SINFO.sale_code AS saleCode,
      SINFO.sale_date AS saleDate,
      CSUPPLIER.cust_code AS custCode,
      CSUPPLIER.cust_name AS custName,
      SINFO.currency AS currency,
      SINFO.cust_phone_num AS custPhoneNum,
      SINFO.exchange_rate AS exchangeRate,
      SINFO.receivable_accoun AS receivableAccoun,
      SINFO.due_date AS dueDate,
      SINFO.payment_status AS paymentStatus,
      SINFO.is_receipt AS isReceipt,
      CONCAT(SINFO.user_code, UINFO.real_name) AS salesmanName,
      SINFO.collection_user_name AS collectionUserName,
      SINFO.remarks AS saleRemark,
      SINFO.delivery_address AS deliveryAddress,
      DICTIONPRO.dict_name AS saleProject,
      SINFO.discount_amount AS discountAmount,
      SINFO.collection_terms AS collectionTerms,
      SINFO.account_period AS accountPeriod,
      (SELECT SUM(collected_amount) FROM tab_sale_receipts_details srd WHERE SINFO.sale_code = srd.sale_code) AS sumCollectedAmount,
      SINFO.subordinate_company_name AS subordinateCompanyName,
      SINFO.sale_source AS saleSource
    FROM tab_sale_info SINFO
    LEFT JOIN tab_dictionary_info DICTIONPRO ON SINFO.sale_project=DICTIONPRO.dict_code AND DICTIONPRO.data_type='project_list'
    LEFT JOIN tab_customer_supplier CSUPPLIER ON SINFO.cust_code=CSUPPLIER.cust_code AND CSUPPLIER.cust_type IN (1, 3)
    LEFT JOIN tab_user_info UINFO ON SINFO.salesman_code = UINFO.salesman_code
    WHERE 1=1
    <if test="startTime != null and startTime != ''">
      AND  <![CDATA[SINFO.sale_date >= DATE_FORMAT(#{startTime},'%Y-%m-%d %H:%i:%s')]]>
    </if>
    <if test="endTime != null and endTime != ''">
      AND  <![CDATA[SINFO.sale_date <= DATE_FORMAT(#{endTime},'%Y-%m-%d 23:59:59')]]>
    </if>

    <if test="saleCode != null and saleCode != ''">
      AND  SINFO.sale_code LIKE CONCAT(#{saleCode}, '%')
    </if>
    <if test="salesmanCode != null and salesmanCode != ''">
      AND  SINFO.salesman_code=#{salesmanCode}
    </if>
    <if test="paymentStatus != null and paymentStatus != ''">
      AND  SINFO.payment_status=#{paymentStatus}
    </if>
    <if test="subordinateCompanyCode != null and subordinateCompanyCode != ''">
      AND  SINFO.subordinate_company_code=#{subordinateCompanyCode}
    </if>
    <if test="custCode != null and custCode != ''">
      AND  SINFO.cust_code=#{custCode}
    </if>
    <if test="idList.size() > 0">
      AND SINFO.id IN
      <foreach collection="idList" item="id" separator="," open="(" close=")" index="index">
        #{id}
      </foreach>
    </if>
    ORDER BY SINFO.sale_date  DESC
  </select>

  <resultMap id="exportSaleListMap" type="com.exx.dzj.entity.market.SaleListInfo">
    <result column="saleCode" property="saleCode"/>
    <result column="saleDate" property="saleDate"/>
    <result column="custCode" property="custCode"/>
    <result column="custName" property="custName"/>
    <result column="currency" property="currency"/>
    <result column="exchangeRate" property="exchangeRate"/>
    <result column="receivableAccoun" property="receivableAccoun"/>
    <result column="dueDate" property="dueDate"/>
    <result column="paymentStatus" property="paymentStatus"/>
    <result column="isReceipt" property="isReceipt"/>
    <result column="salesmanName" property="salesmanName"/>
    <result column="collectionUserName" property="collectionUserName"/>
    <result column="saleRemark" property="saleRemark"/>
    <result column="deliveryAddress" property="deliveryAddress"/>
    <result column="saleProject" property="saleProject"/>
    <result column="discountAmount" property="discountAmount"/>
    <result column="collectionTerms" property="collectionTerms"/>
    <result column="accountPeriod" property="accountPeriod"/>
    <result column="sumCollectedAmount" property="sumCollectedAmount"/>
    <result column="subordinateCompanyName" property="subordinateCompanyName"/>
    <!--<result column="saleSource" property="saleSource"/>-->
    <collection property="logisticsLsit" column="saleCode" ofType="com.exx.dzj.entity.market.LogisticsInfo"
                javaType="java.util.List" select="logisticsInfoList"></collection>
   </resultMap>
</mapper>