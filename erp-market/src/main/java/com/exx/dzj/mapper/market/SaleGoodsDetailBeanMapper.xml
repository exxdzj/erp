<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exx.dzj.mapper.market.SaleGoodsDetailBeanMapper">
  <resultMap id="BaseResultMap" type="com.exx.dzj.entity.market.SaleGoodsDetailBean">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sale_code" jdbcType="VARCHAR" property="saleCode" />
    <result column="stock_code" jdbcType="VARCHAR" property="stockCode" />
    <result column="stock_name" jdbcType="VARCHAR" property="stockName" />
    <result column="stock_address_code" jdbcType="VARCHAR" property="stockAddressCode" />
    <result column="stock_address" jdbcType="VARCHAR" property="stockAddress" />
    <result column="goods_num" jdbcType="INTEGER" property="goodsNum" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="price_type" jdbcType="VARCHAR" property="priceType" />
    <result column="discount_rate" jdbcType="DECIMAL" property="discountRate" />
    <result column="discount_amount" jdbcType="DECIMAL" property="discountAmount" />
    <result column="sales_volume" jdbcType="DECIMAL" property="salesVolume" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sale_code, stock_code, stock_name, stock_address_code, stock_address, goods_num, 
    unit_price, price_type, discount_rate, discount_amount, sales_volume, remarks, create_time, 
    create_user, update_time, update_user
  </sql>
  <select id="selectByExample" parameterType="com.exx.dzj.entity.market.SaleGoodsDetailBeanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tab_sale_goods_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tab_sale_goods_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tab_sale_goods_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.exx.dzj.entity.market.SaleGoodsDetailBeanExample">
    delete from tab_sale_goods_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.exx.dzj.entity.market.SaleGoodsDetailBean">
    insert into tab_sale_goods_detail (id, sale_code, stock_code, 
      stock_name, stock_address_code, stock_address, 
      goods_num, unit_price, price_type, 
      discount_rate, discount_amount, sales_volume, 
      remarks, create_time, create_user, 
      update_time, update_user)
    values (#{id,jdbcType=INTEGER}, #{saleCode,jdbcType=VARCHAR}, #{stockCode,jdbcType=VARCHAR}, 
      #{stockName,jdbcType=VARCHAR}, #{stockAddressCode,jdbcType=VARCHAR}, #{stockAddress,jdbcType=VARCHAR}, 
      #{goodsNum,jdbcType=INTEGER}, #{unitPrice,jdbcType=DECIMAL}, #{priceType,jdbcType=VARCHAR}, 
      #{discountRate,jdbcType=DECIMAL}, #{discountAmount,jdbcType=DECIMAL}, #{salesVolume,jdbcType=DECIMAL}, 
      #{remarks,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.exx.dzj.entity.market.SaleGoodsDetailBean">
    insert into tab_sale_goods_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="saleCode != null">
        sale_code,
      </if>
      <if test="stockCode != null">
        stock_code,
      </if>
      <if test="stockName != null">
        stock_name,
      </if>
      <if test="stockAddressCode != null">
        stock_address_code,
      </if>
      <if test="stockAddress != null">
        stock_address,
      </if>
      <if test="goodsNum != null">
        goods_num,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="priceType != null">
        price_type,
      </if>
      <if test="discountRate != null">
        discount_rate,
      </if>
      <if test="discountAmount != null">
        discount_amount,
      </if>
      <if test="salesVolume != null">
        sales_volume,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="saleCode != null">
        #{saleCode,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null">
        #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null">
        #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="stockAddressCode != null">
        #{stockAddressCode,jdbcType=VARCHAR},
      </if>
      <if test="stockAddress != null">
        #{stockAddress,jdbcType=VARCHAR},
      </if>
      <if test="goodsNum != null">
        #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="priceType != null">
        #{priceType,jdbcType=VARCHAR},
      </if>
      <if test="discountRate != null">
        #{discountRate,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null">
        #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="salesVolume != null">
        #{salesVolume,jdbcType=DECIMAL},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.exx.dzj.entity.market.SaleGoodsDetailBeanExample" resultType="java.lang.Long">
    select count(*) from tab_sale_goods_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tab_sale_goods_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.saleCode != null">
        sale_code = #{record.saleCode,jdbcType=VARCHAR},
      </if>
      <if test="record.stockCode != null">
        stock_code = #{record.stockCode,jdbcType=VARCHAR},
      </if>
      <if test="record.stockName != null">
        stock_name = #{record.stockName,jdbcType=VARCHAR},
      </if>
      <if test="record.stockAddressCode != null">
        stock_address_code = #{record.stockAddressCode,jdbcType=VARCHAR},
      </if>
      <if test="record.stockAddress != null">
        stock_address = #{record.stockAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsNum != null">
        goods_num = #{record.goodsNum,jdbcType=INTEGER},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.priceType != null">
        price_type = #{record.priceType,jdbcType=VARCHAR},
      </if>
      <if test="record.discountRate != null">
        discount_rate = #{record.discountRate,jdbcType=DECIMAL},
      </if>
      <if test="record.discountAmount != null">
        discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.salesVolume != null">
        sales_volume = #{record.salesVolume,jdbcType=DECIMAL},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tab_sale_goods_detail
    set id = #{record.id,jdbcType=INTEGER},
      sale_code = #{record.saleCode,jdbcType=VARCHAR},
      stock_code = #{record.stockCode,jdbcType=VARCHAR},
      stock_name = #{record.stockName,jdbcType=VARCHAR},
      stock_address_code = #{record.stockAddressCode,jdbcType=VARCHAR},
      stock_address = #{record.stockAddress,jdbcType=VARCHAR},
      goods_num = #{record.goodsNum,jdbcType=INTEGER},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      price_type = #{record.priceType,jdbcType=VARCHAR},
      discount_rate = #{record.discountRate,jdbcType=DECIMAL},
      discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      sales_volume = #{record.salesVolume,jdbcType=DECIMAL},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.exx.dzj.entity.market.SaleGoodsDetailBean">
    update tab_sale_goods_detail
    <set>
      <if test="saleCode != null">
        sale_code = #{saleCode,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null">
        stock_code = #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null">
        stock_name = #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="stockAddressCode != null">
        stock_address_code = #{stockAddressCode,jdbcType=VARCHAR},
      </if>
      <if test="stockAddress != null">
        stock_address = #{stockAddress,jdbcType=VARCHAR},
      </if>
      <if test="goodsNum != null">
        goods_num = #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="priceType != null">
        price_type = #{priceType,jdbcType=VARCHAR},
      </if>
      <if test="discountRate != null">
        discount_rate = #{discountRate,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null">
        discount_amount = #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="salesVolume != null">
        sales_volume = #{salesVolume,jdbcType=DECIMAL},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exx.dzj.entity.market.SaleGoodsDetailBean">
    update tab_sale_goods_detail
    set sale_code = #{saleCode,jdbcType=VARCHAR},
      stock_code = #{stockCode,jdbcType=VARCHAR},
      stock_name = #{stockName,jdbcType=VARCHAR},
      stock_address_code = #{stockAddressCode,jdbcType=VARCHAR},
      stock_address = #{stockAddress,jdbcType=VARCHAR},
      goods_num = #{goodsNum,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      price_type = #{priceType,jdbcType=VARCHAR},
      discount_rate = #{discountRate,jdbcType=DECIMAL},
      discount_amount = #{discountAmount,jdbcType=DECIMAL},
      sales_volume = #{salesVolume,jdbcType=DECIMAL},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 查询销售单详情关联商品 -->
  <select id="querySaleGoodsDetailBeanList" parameterType="String" resultMap="saleGoodsDetailBeanMap">
    SELECT
    SGDETAIL.id,
    SGDETAIL.stock_code ,
    SGDETAIL.stock_name ,
    SGDETAIL.stock_address_code ,
    SGDETAIL.stock_address ,
    SGDETAIL.goods_num ,
    SGDETAIL.unit_price ,
    SGDETAIL.real_sell_price ,
    SGDETAIL.price_type ,
    SGDETAIL.discount_rate ,
    SGDETAIL.discount_amount ,
    SGDETAIL.sales_volume ,
    SGDETAIL.remarks ,
    SGDETAIL.create_user ,
    SGDETAIL.update_user
    FROM tab_sale_goods_detail SGDETAIL
    WHERE SGDETAIL.sale_code=#{saleCode}
  </select>
  <resultMap id="saleGoodsDetailBeanMap" type="com.exx.dzj.entity.market.SaleGoodsDetailBean">
    <result property="id" jdbcType="INTEGER" column="id" />
    <result property="stockCode" jdbcType="VARCHAR" column="stock_code" />
    <result property="stockName" jdbcType="VARCHAR" column="stock_name" />
    <result property="stockAddressCode" jdbcType="VARCHAR" column="stock_address_code" />
    <result property="stockAddress" jdbcType="VARCHAR" column="stock_address" />
    <result property="goodsNum" jdbcType="INTEGER" column="goods_num" />
    <result property="unitPrice" jdbcType="VARCHAR" column="unit_price" />
    <result property="realSellPrice" jdbcType="VARCHAR" column="real_sell_price" />
    <result property="priceType" jdbcType="VARCHAR" column="price_type" />
    <result property="discountRate" jdbcType="DECIMAL" column="discount_rate" />
    <result property="discountAmount" jdbcType="DECIMAL" column="discount_amount" />
    <result property="salesVolume" jdbcType="DECIMAL" column="sales_volume" />
    <result property="remarks" jdbcType="VARCHAR" column="remarks" />
    <result property="createUser" jdbcType="VARCHAR" column="create_user" />
    <result property="updateUser" jdbcType="VARCHAR" column="update_user" />
  </resultMap>

  <!-- 批量新增销售单商品 -->
  <insert id="batchInsertSalesGoodsDetail">
    INSERT INTO tab_sale_goods_detail
      (sale_code, stock_code,stock_name, stock_address_code, stock_address,
      goods_num, unit_price, real_sell_price,price_type,
      discount_rate, discount_amount, sales_volume,
      remarks, create_time, create_user,
      update_time, update_user)
    VALUES
    <foreach collection="list" item="saleGoodsDetail" separator=",">
      (#{saleGoodsDetail.saleCode,jdbcType=VARCHAR}, #{saleGoodsDetail.stockCode,jdbcType=VARCHAR},
      #{saleGoodsDetail.stockName,jdbcType=VARCHAR}, #{saleGoodsDetail.stockAddressCode,jdbcType=VARCHAR}, #{saleGoodsDetail.stockAddress,jdbcType=VARCHAR},
      #{saleGoodsDetail.goodsNum,jdbcType=INTEGER}, #{saleGoodsDetail.unitPrice,jdbcType=DECIMAL}, #{saleGoodsDetail.realSellPrice},#{saleGoodsDetail.priceType,jdbcType=VARCHAR},
      #{saleGoodsDetail.discountRate,jdbcType=DECIMAL}, #{saleGoodsDetail.discountAmount,jdbcType=DECIMAL}, #{saleGoodsDetail.salesVolume,jdbcType=DECIMAL},
      #{saleGoodsDetail.remarks,jdbcType=VARCHAR}, SYSDATE(), #{saleGoodsDetail.createUser,jdbcType=VARCHAR},
      SYSDATE(), #{saleGoodsDetail.updateUser,jdbcType=VARCHAR})
    </foreach>
  </insert>

  <!-- 批量修改 -->
  <update id="batchUpdateSalesGoodsDetail" parameterType="java.util.List">
    <foreach collection="list" separator=";" item="item" index="index" close="" open="">
      UPDATE tab_sale_goods_detail
        <set>
          <if test="item.saleCode != null">
            sale_code = #{item.saleCode,jdbcType=VARCHAR},
          </if>
          <if test="item.stockCode != null">
            stock_code = #{item.stockCode,jdbcType=VARCHAR},
          </if>
          <if test="item.stockName != null">
            stock_name = #{item.stockName,jdbcType=VARCHAR},
          </if>
          <if test="item.stockAddressCode != null">
            stock_address_code = #{item.stockAddressCode,jdbcType=VARCHAR},
          </if>
          <if test="item.stockAddress != null">
            stock_address = #{item.stockAddress,jdbcType=VARCHAR},
          </if>
          <if test="item.goodsNum != null">
            goods_num = #{item.goodsNum,jdbcType=INTEGER},
          </if>
          <if test="item.unitPrice != null">
            unit_price = #{item.unitPrice,jdbcType=DECIMAL},
          </if>
          <if test="item.realSellPrice != null">
            real_sell_price = #{item.realSellPrice,jdbcType=DECIMAL},
          </if>
          <if test="item.priceType != null">
            price_type = #{item.priceType,jdbcType=VARCHAR},
          </if>
          <if test="item.discountRate != null">
            discount_rate = #{item.discountRate,jdbcType=DECIMAL},
          </if>
          <if test="item.discountAmount != null">
            discount_amount = #{item.discountAmount,jdbcType=DECIMAL},
          </if>
          <if test="item.salesVolume != null">
            sales_volume = #{item.salesVolume,jdbcType=DECIMAL},
          </if>
          <if test="item.remarks != null">
            remarks = #{item.remarks,jdbcType=VARCHAR},
          </if>
          <if test="item.updateTime != null">
            update_time = SYSDATE(),
          </if>
          <if test="item.updateUser != null">
            update_user = #{item.updateUser,jdbcType=VARCHAR},
          </if>
        </set>
        <where>
          id = #{item.id,jdbcType=INTEGER}
        </where>
    </foreach>
  </update>
  
  <!-- 批量删除 -->
  <delete id="batchDeleteSalesGoodsDetail" parameterType="java.util.List">
    DELETE FROM tab_sale_goods_detail
      WHERE id IN
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
          #{id}
        </foreach>
  </delete>

  <select id="querySaleGoodsDetail" parameterType="com.exx.dzj.entity.market.SaleGoodsDetailBean" resultType="com.exx.dzj.entity.market.SaleGoodsDetailBean">
    SELECT
      goods_num AS goodsNum, stock_code AS stockCode, sale_code AS saleCode, stock_address_code AS stockAddressCode
    FROM tab_sale_goods_detail
    WHERE sale_code = #{saleCode}
      AND stock_code = #{stockCode}
  </select>

  <select id="queryGoodsForStock" parameterType="com.exx.dzj.entity.market.LogisticsInfo" resultType="com.exx.dzj.entity.market.SaleGoodsDetailBean">
    SELECT  id AS id, stock_code AS stockCode, stock_address_code AS stockAddressCode, goods_num AS goodsNum, is_subtract_inventory AS isSubtractInventory
	FROM tab_sale_goods_detail WHERE sale_code = #{saleCode} and stock_code = #{stockCode} and stock_address_code = #{stockAddressCode}
  </select>

  <update id="batchUpdateSalesGoodsSubtractStatus" parameterType="java.util.List">
    UPDATE tab_sale_goods_detail
      SET is_subtract_inventory = 1
      WHERE id IN
      <foreach collection="list" item="item" separator="," open="(" close=")">
        #{item}
      </foreach>
  </update>
</mapper>