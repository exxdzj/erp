<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exx.dzj.mapper.stock.StockNumPriceMapper">
  <resultMap id="BaseResultMap" type="com.exx.dzj.entity.stock.StockNumPrice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stock_code" jdbcType="VARCHAR" property="stockCode" />
    <result column="standard_buy_price" jdbcType="DECIMAL" property="standardBuyPrice" />
    <result column="standard_sell_price" jdbcType="DECIMAL" property="standardSellPrice" />
    <result column="max_purchase_price" jdbcType="DECIMAL" property="maxPurchasePrice" />
    <result column="min_sell_price" jdbcType="DECIMAL" property="minSellPrice" />
    <result column="min_inventory" jdbcType="INTEGER" property="minInventory" />
    <result column="warn_num" jdbcType="INTEGER" property="warnNum" />
    <result column="stock_address" jdbcType="VARCHAR" property="stockAddress" />
    <result column="stock_address_code" jdbcType="VARCHAR" property="stockAddressCode" />
    <result column="is_enable" jdbcType="INTEGER" property="isEnable" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Base_Column_List">
    id, stock_code, standard_buy_price, standard_sell_price, max_purchase_price, min_sell_price,
    min_inventory, warn_num, stock_address, stock_address_code, is_enable, create_time, create_user, update_time, update_user
  </sql>

  <select id="selectByExample" parameterType="com.exx.dzj.entity.stock.StockNumPriceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tab_stock_num_price
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tab_stock_num_price
    where id = #{id,jdbcType=INTEGER}
  </select>

  <insert id="insertSelective" parameterType="com.exx.dzj.entity.stock.StockNumPrice">
    insert into tab_stock_num_price
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stockCode != null and stockCode!=''">
        stock_code,
      </if>
      <if test="standardBuyPrice != null">
        standard_buy_price,
      </if>
      <if test="standardSellPrice != null">
        standard_sell_price,
      </if>
      <if test="maxPurchasePrice != null">
        max_purchase_price,
      </if>
      <if test="minSellPrice != null">
        min_sell_price,
      </if>
      <if test="minInventory != null">
        min_inventory,
      </if>
      <if test="warnNum != null">
        warn_num,
      </if>
      <if test="stockAddress != null and stockAddress!=''">
        stock_address,
      </if>
      <if test="stockAddressCode != null and stockAddressCode!=''">
        stock_address_code,
      </if>
      <if test="isEnable != null">
        is_enable,
      </if>

      <if test="createUser != null and createUser!=''">
        create_user,
      </if>

      <if test="updateUser != null and updateUser!=''">
        update_user,
      </if>
      update_time,
      create_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stockCode != null and stockCode!=''">
        #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="standardBuyPrice != null">
        #{standardBuyPrice,jdbcType=DECIMAL},
      </if>
      <if test="standardSellPrice != null">
        #{standardSellPrice,jdbcType=DECIMAL},
      </if>
      <if test="maxPurchasePrice != null">
        #{maxPurchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="minSellPrice != null">
        #{minSellPrice,jdbcType=DECIMAL},
      </if>
      <if test="minInventory != null">
        #{minInventory,jdbcType=INTEGER},
      </if>
      <if test="warnNum != null">
        #{warnNum},
      </if>
      <if test="stockAddress != null and stockAddress!=''">
        #{stockAddress},
      </if>
      <if test="stockAddressCode != null and stockAddressCode!=''">
        #{stockAddressCode},
      </if>
      <if test="isEnable != null">
        #{isEnable,jdbcType=INTEGER},
      </if>

      <if test="createUser != null and createUser!=''">
        #{createUser,jdbcType=VARCHAR},
      </if>

      <if test="updateUser != null and updateUser!=''">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      SYSDATE(),
      SYSDATE()
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.exx.dzj.entity.stock.StockNumPriceExample" resultType="java.lang.Long">
    select count(*) from tab_stock_num_price
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update tab_stock_num_price
    <set>
      <if test="record.standardBuyPrice != null">
        standard_buy_price = #{record.standardBuyPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.standardSellPrice != null">
        standard_sell_price = #{record.standardSellPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.maxPurchasePrice != null">
        max_purchase_price = #{record.maxPurchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.minSellPrice != null">
        min_sell_price = #{record.minSellPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.minInventory != null">
        min_inventory = #{record.minInventory,jdbcType=INTEGER},
      </if>
      <if test="record.isEnable != null">
        is_enable = #{record.isEnable,jdbcType=INTEGER},
      </if>
        update_time = SYSDATE(),
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.exx.dzj.entity.stock.StockNumPrice">
    update tab_stock_num_price
    <set>
      <if test="stockCode != null">
        stock_code = #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="standardBuyPrice != null">
        standard_buy_price = #{standardBuyPrice,jdbcType=DECIMAL},
      </if>
      <if test="standardSellPrice != null">
        standard_sell_price = #{standardSellPrice,jdbcType=DECIMAL},
      </if>
      <if test="maxPurchasePrice != null">
        max_purchase_price = #{maxPurchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="minSellPrice != null">
        min_sell_price = #{minSellPrice,jdbcType=DECIMAL},
      </if>
      <if test="stockAddress != null and stockAddress!=''">
        stock_address = #{stockAddress,jdbcType=VARCHAR},
      </if>
      <if test="stockAddressCode != null and stockAddressCode!=''">
        stock_address_code = #{stockAddressCode,jdbcType=VARCHAR},
      </if>
      <if test="minInventory != null">
        min_inventory = #{minInventory,jdbcType=INTEGER},
      </if>
      <if test="isEnable != null">
        is_enable = #{isEnable,jdbcType=INTEGER},
      </if>
        update_time = SYSDATE(),
      <if test="updateUser != null and updateUser!=''">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where stock_code = #{oldStockCode,jdbcType=VARCHAR}
  </update>

</mapper>