<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exx.dzj.mapper.stock.StockInfoMapper">
  <resultMap id="BaseResultMap" type="com.exx.dzj.entity.stock.StockInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stock_code" jdbcType="VARCHAR" property="stockCode" />
    <result column="nature" jdbcType="VARCHAR" property="nature" />
    <result column="stock_name" jdbcType="VARCHAR" property="stockName" />
    <result column="specificate_type" jdbcType="VARCHAR" property="specificateType" />
    <result column="stock_class" jdbcType="VARCHAR" property="stockClass" />
    <result column="stock_address" jdbcType="VARCHAR" property="stockAddress" />
    <result column="meter_unit" jdbcType="VARCHAR" property="meterUnit" />
    <result column="pictures" jdbcType="VARCHAR" property="pictures" />
    <result column="bar_code" jdbcType="VARCHAR" property="barCode" />
    <result column="is_enable" jdbcType="INTEGER" property="isEnable" />
    <result column="is_comm_sale" jdbcType="INTEGER" property="isCommSale" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, stock_code, nature, stock_name, specificate_type, stock_class, stock_address, 
    meter_unit, pictures, bar_code, is_enable, is_comm_sale, create_time, create_user, 
    update_time, update_user
  </sql>
  <select id="selectByExample" parameterType="com.exx.dzj.entity.stock.StockInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tab_stock_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tab_stock_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tab_stock_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.exx.dzj.entity.stock.StockInfoExample">
    delete from tab_stock_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.exx.dzj.entity.stock.StockInfo">
    insert into tab_stock_info (id, stock_code, nature, 
      stock_name, specificate_type, stock_class, 
      stock_address, meter_unit, pictures, 
      bar_code, is_enable, is_comm_sale, 
      create_time, create_user, update_time, 
      update_user)
    values (#{id,jdbcType=INTEGER}, #{stockCode,jdbcType=VARCHAR}, #{nature,jdbcType=VARCHAR}, 
      #{stockName,jdbcType=VARCHAR}, #{specificateType,jdbcType=VARCHAR}, #{stockClass,jdbcType=VARCHAR}, 
      #{stockAddress,jdbcType=VARCHAR}, #{meterUnit,jdbcType=VARCHAR}, #{pictures,jdbcType=VARCHAR}, 
      #{barCode,jdbcType=VARCHAR}, #{isEnable,jdbcType=INTEGER}, #{isCommSale,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.exx.dzj.entity.stock.StockInfo">
    insert into tab_stock_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stockCode != null">
        stock_code,
      </if>
      <if test="nature != null">
        nature,
      </if>
      <if test="stockName != null">
        stock_name,
      </if>
      <if test="specificateType != null">
        specificate_type,
      </if>
      <if test="stockClass != null">
        stock_class,
      </if>
      <if test="stockAddress != null">
        stock_address,
      </if>
      <if test="meterUnit != null">
        meter_unit,
      </if>
      <if test="pictures != null">
        pictures,
      </if>
      <if test="barCode != null">
        bar_code,
      </if>
      <if test="isEnable != null">
        is_enable,
      </if>
      <if test="isCommSale != null">
        is_comm_sale,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stockCode != null">
        #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="nature != null">
        #{nature,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null">
        #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="specificateType != null">
        #{specificateType,jdbcType=VARCHAR},
      </if>
      <if test="stockClass != null">
        #{stockClass,jdbcType=VARCHAR},
      </if>
      <if test="stockAddress != null">
        #{stockAddress,jdbcType=VARCHAR},
      </if>
      <if test="meterUnit != null">
        #{meterUnit,jdbcType=VARCHAR},
      </if>
      <if test="pictures != null">
        #{pictures,jdbcType=VARCHAR},
      </if>
      <if test="barCode != null">
        #{barCode,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="isCommSale != null">
        #{isCommSale,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.exx.dzj.entity.stock.StockInfoExample" resultType="java.lang.Long">
    select count(*) from tab_stock_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tab_stock_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stockCode != null">
        stock_code = #{record.stockCode,jdbcType=VARCHAR},
      </if>
      <if test="record.nature != null">
        nature = #{record.nature,jdbcType=VARCHAR},
      </if>
      <if test="record.stockName != null">
        stock_name = #{record.stockName,jdbcType=VARCHAR},
      </if>
      <if test="record.specificateType != null">
        specificate_type = #{record.specificateType,jdbcType=VARCHAR},
      </if>
      <if test="record.stockClass != null">
        stock_class = #{record.stockClass,jdbcType=VARCHAR},
      </if>
      <if test="record.stockAddress != null">
        stock_address = #{record.stockAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.meterUnit != null">
        meter_unit = #{record.meterUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.pictures != null">
        pictures = #{record.pictures,jdbcType=VARCHAR},
      </if>
      <if test="record.barCode != null">
        bar_code = #{record.barCode,jdbcType=VARCHAR},
      </if>
      <if test="record.isEnable != null">
        is_enable = #{record.isEnable,jdbcType=INTEGER},
      </if>
      <if test="record.isCommSale != null">
        is_comm_sale = #{record.isCommSale,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tab_stock_info
    set id = #{record.id,jdbcType=INTEGER},
      stock_code = #{record.stockCode,jdbcType=VARCHAR},
      nature = #{record.nature,jdbcType=VARCHAR},
      stock_name = #{record.stockName,jdbcType=VARCHAR},
      specificate_type = #{record.specificateType,jdbcType=VARCHAR},
      stock_class = #{record.stockClass,jdbcType=VARCHAR},
      stock_address = #{record.stockAddress,jdbcType=VARCHAR},
      meter_unit = #{record.meterUnit,jdbcType=VARCHAR},
      pictures = #{record.pictures,jdbcType=VARCHAR},
      bar_code = #{record.barCode,jdbcType=VARCHAR},
      is_enable = #{record.isEnable,jdbcType=INTEGER},
      is_comm_sale = #{record.isCommSale,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.exx.dzj.entity.stock.StockInfo">
    update tab_stock_info
    <set>
      <if test="stockCode != null">
        stock_code = #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="nature != null">
        nature = #{nature,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null">
        stock_name = #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="specificateType != null">
        specificate_type = #{specificateType,jdbcType=VARCHAR},
      </if>
      <if test="stockClass != null">
        stock_class = #{stockClass,jdbcType=VARCHAR},
      </if>
      <if test="stockAddress != null">
        stock_address = #{stockAddress,jdbcType=VARCHAR},
      </if>
      <if test="meterUnit != null">
        meter_unit = #{meterUnit,jdbcType=VARCHAR},
      </if>
      <if test="pictures != null">
        pictures = #{pictures,jdbcType=VARCHAR},
      </if>
      <if test="barCode != null">
        bar_code = #{barCode,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        is_enable = #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="isCommSale != null">
        is_comm_sale = #{isCommSale,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exx.dzj.entity.stock.StockInfo">
    update tab_stock_info
    set stock_code = #{stockCode,jdbcType=VARCHAR},
      nature = #{nature,jdbcType=VARCHAR},
      stock_name = #{stockName,jdbcType=VARCHAR},
      specificate_type = #{specificateType,jdbcType=VARCHAR},
      stock_class = #{stockClass,jdbcType=VARCHAR},
      stock_address = #{stockAddress,jdbcType=VARCHAR},
      meter_unit = #{meterUnit,jdbcType=VARCHAR},
      pictures = #{pictures,jdbcType=VARCHAR},
      bar_code = #{barCode,jdbcType=VARCHAR},
      is_enable = #{isEnable,jdbcType=INTEGER},
      is_comm_sale = #{isCommSale,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>