<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exx.dzj.mapper.purchase.PurchaseGoodsDetailBeanMapper">
  <resultMap id="BaseResultMap" type="com.exx.dzj.entity.purchase.PurchaseGoodsDetailBean">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="purchase_code" jdbcType="VARCHAR" property="purchaseCode" />
    <result column="stock_code" jdbcType="VARCHAR" property="stockCode" />
    <result column="stock_name" jdbcType="VARCHAR" property="stockName" />
    <result column="stock_address_code" jdbcType="VARCHAR" property="stockAddressCode" />
    <result column="stock_address" jdbcType="VARCHAR" property="stockAddress" />
    <result column="goods_num" jdbcType="INTEGER" property="goodsNum" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="real_sell_price" jdbcType="DECIMAL" property="realSellPrice" />
    <result column="price_type" jdbcType="VARCHAR" property="priceType" />
    <result column="discount_rate" jdbcType="DECIMAL" property="discountRate" />
    <result column="discount_amount" jdbcType="DECIMAL" property="discountAmount" />
    <result column="purchase_volume" jdbcType="DECIMAL" property="purchaseVolume" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, purchase_code, stock_code, stock_name, stock_address_code, stock_address, goods_num, 
    unit_price, real_sell_price,price_type, discount_rate, discount_amount, purchase_volume, remarks,
    create_time, create_user, update_time, update_user
  </sql>
  <select id="selectByExample" parameterType="com.exx.dzj.entity.purchase.PurchaseGoodsDetailBeanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tab_purchase_goods_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tab_purchase_goods_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tab_purchase_goods_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.exx.dzj.entity.purchase.PurchaseGoodsDetailBeanExample">
    delete from tab_purchase_goods_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.exx.dzj.entity.purchase.PurchaseGoodsDetailBean">
    insert into tab_purchase_goods_detail (id, purchase_code, stock_code, 
      stock_name, stock_address_code, stock_address, 
      goods_num, unit_price, real_sell_price,price_type,
      discount_rate, discount_amount, purchase_volume, 
      remarks, create_time, create_user, 
      update_time, update_user)
    values (#{id,jdbcType=INTEGER}, #{purchaseCode,jdbcType=VARCHAR}, #{stockCode,jdbcType=VARCHAR}, 
      #{stockName,jdbcType=VARCHAR}, #{stockAddressCode,jdbcType=VARCHAR}, #{stockAddress,jdbcType=VARCHAR}, 
      #{goodsNum,jdbcType=INTEGER}, #{unitPrice,jdbcType=DECIMAL}, #{realSellPrice},#{priceType,jdbcType=VARCHAR},
      #{discountRate,jdbcType=DECIMAL}, #{discountAmount,jdbcType=DECIMAL}, #{purchaseVolume,jdbcType=DECIMAL}, 
      #{remarks,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.exx.dzj.entity.purchase.PurchaseGoodsDetailBean">
    insert into tab_purchase_goods_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="purchaseCode != null">
        purchase_code,
      </if>
      <if test="stockCode != null">
        stock_code,
      </if>
      <if test="stockName != null">
        stock_name,
      </if>
      <if test="stockAddressCode != null">
        stock_address_code,
      </if>
      <if test="stockAddress != null">
        stock_address,
      </if>
      <if test="goodsNum != null">
        goods_num,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="realSellPrice != null">
        real_sell_price,
      </if>
      <if test="priceType != null">
        price_type,
      </if>
      <if test="discountRate != null">
        discount_rate,
      </if>
      <if test="discountAmount != null">
        discount_amount,
      </if>
      <if test="purchaseVolume != null">
        purchase_volume,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="purchaseCode != null">
        #{purchaseCode,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null">
        #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null">
        #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="stockAddressCode != null">
        #{stockAddressCode,jdbcType=VARCHAR},
      </if>
      <if test="stockAddress != null">
        #{stockAddress,jdbcType=VARCHAR},
      </if>
      <if test="goodsNum != null">
        #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="realSellPrice != null">
        #{realSellPrice,jdbcType=DECIMAL},
      </if>
      <if test="priceType != null">
        #{priceType,jdbcType=VARCHAR},
      </if>
      <if test="discountRate != null">
        #{discountRate,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null">
        #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="purchaseVolume != null">
        #{purchaseVolume,jdbcType=DECIMAL},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.exx.dzj.entity.purchase.PurchaseGoodsDetailBeanExample" resultType="java.lang.Long">
    select count(*) from tab_purchase_goods_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tab_purchase_goods_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.purchaseCode != null">
        purchase_code = #{record.purchaseCode,jdbcType=VARCHAR},
      </if>
      <if test="record.stockCode != null">
        stock_code = #{record.stockCode,jdbcType=VARCHAR},
      </if>
      <if test="record.stockName != null">
        stock_name = #{record.stockName,jdbcType=VARCHAR},
      </if>
      <if test="record.stockAddressCode != null">
        stock_address_code = #{record.stockAddressCode,jdbcType=VARCHAR},
      </if>
      <if test="record.stockAddress != null">
        stock_address = #{record.stockAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsNum != null">
        goods_num = #{record.goodsNum,jdbcType=INTEGER},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.realSellPrice != null">
        real_sell_price = #{record.realSellPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.priceType != null">
        price_type = #{record.priceType,jdbcType=VARCHAR},
      </if>
      <if test="record.discountRate != null">
        discount_rate = #{record.discountRate,jdbcType=DECIMAL},
      </if>
      <if test="record.discountAmount != null">
        discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.purchaseVolume != null">
        purchase_volume = #{record.purchaseVolume,jdbcType=DECIMAL},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tab_purchase_goods_detail
    set id = #{record.id,jdbcType=INTEGER},
      purchase_code = #{record.purchaseCode,jdbcType=VARCHAR},
      stock_code = #{record.stockCode,jdbcType=VARCHAR},
      stock_name = #{record.stockName,jdbcType=VARCHAR},
      stock_address_code = #{record.stockAddressCode,jdbcType=VARCHAR},
      stock_address = #{record.stockAddress,jdbcType=VARCHAR},
      goods_num = #{record.goodsNum,jdbcType=INTEGER},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      real_sell_price = #{record.realSellPrice,jdbcType=DECIMAL},
      price_type = #{record.priceType,jdbcType=VARCHAR},
      discount_rate = #{record.discountRate,jdbcType=DECIMAL},
      discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      purchase_volume = #{record.purchaseVolume,jdbcType=DECIMAL},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.exx.dzj.entity.purchase.PurchaseGoodsDetailBean">
    update tab_purchase_goods_detail
    <set>
      <if test="purchaseCode != null">
        purchase_code = #{purchaseCode,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null">
        stock_code = #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null">
        stock_name = #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="stockAddressCode != null">
        stock_address_code = #{stockAddressCode,jdbcType=VARCHAR},
      </if>
      <if test="stockAddress != null">
        stock_address = #{stockAddress,jdbcType=VARCHAR},
      </if>
      <if test="goodsNum != null">
        goods_num = #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="realSellPrice != null">
        real_sell_price = #{realSellPrice,jdbcType=DECIMAL},
      </if>
      <if test="priceType != null">
        price_type = #{priceType,jdbcType=VARCHAR},
      </if>
      <if test="discountRate != null">
        discount_rate = #{discountRate,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null">
        discount_amount = #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="purchaseVolume != null">
        purchase_volume = #{purchaseVolume,jdbcType=DECIMAL},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exx.dzj.entity.purchase.PurchaseGoodsDetailBean">
    update tab_purchase_goods_detail
    set purchase_code = #{purchaseCode,jdbcType=VARCHAR},
      stock_code = #{stockCode,jdbcType=VARCHAR},
      stock_name = #{stockName,jdbcType=VARCHAR},
      stock_address_code = #{stockAddressCode,jdbcType=VARCHAR},
      stock_address = #{stockAddress,jdbcType=VARCHAR},
      goods_num = #{goodsNum,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      real_sell_price = #{realSellPrice,jdbcType=DECIMAL},
      price_type = #{priceType,jdbcType=VARCHAR},
      discount_rate = #{discountRate,jdbcType=DECIMAL},
      discount_amount = #{discountAmount,jdbcType=DECIMAL},
      purchase_volume = #{purchaseVolume,jdbcType=DECIMAL},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 批量添加 -->
  <insert id="batchInsertPurchaseGoods">
    INSERT INTO tab_purchase_goods_detail
      (purchase_code, stock_code,
      stock_name, stock_address_code, stock_address,
      goods_num, unit_price, real_sell_price, price_type,
      discount_rate, discount_amount, purchase_volume,
      remarks, create_time, create_user,
      update_time, update_user)
    VALUES
    <foreach collection="list" item="item" separator=",">
      (#{item.purchaseCode,jdbcType=VARCHAR}, #{item.stockCode,jdbcType=VARCHAR},
      #{item.stockName,jdbcType=VARCHAR}, #{item.stockAddressCode,jdbcType=VARCHAR}, #{item.stockAddress,jdbcType=VARCHAR},
      #{item.goodsNum,jdbcType=INTEGER}, #{item.unitPrice,jdbcType=DECIMAL}, #{item.realSellPrice},#{item.priceType,jdbcType=VARCHAR},
      #{item.discountRate,jdbcType=DECIMAL}, #{item.discountAmount,jdbcType=DECIMAL}, #{item.purchaseVolume,jdbcType=DECIMAL},
      #{item.remarks,jdbcType=VARCHAR}, SYSDATE(), #{item.createUser,jdbcType=VARCHAR},
      SYSDATE(), #{item.updateUser,jdbcType=VARCHAR})
    </foreach>
  </insert>

  <!-- 采购单详情查询关联商品 -->
  <select id="queryPurchaseTicketRelevanceGoods" parameterType="String"  resultMap="relevanceGoodsMap">
    SELECT
      PGDETAIL.id,
      PGDETAIL.purchase_code,
      PGDETAIL.stock_code,
      PGDETAIL.stock_name,
      PGDETAIL.stock_address_code,
      PGDETAIL.stock_address,
      PGDETAIL.goods_num,
      PGDETAIL.unit_price,
      IFNULL(PGDETAIL.real_sell_price, 0) AS real_sell_price,
      PGDETAIL.price_type,
      PGDETAIL.discount_rate,
      PGDETAIL.discount_amount,
      PGDETAIL.purchase_volume,
      PGDETAIL.remarks,
      PGDETAIL.create_time,
      PGDETAIL.create_user,
      PGDETAIL.update_time,
      PGDETAIL.update_user
    FROM tab_purchase_goods_detail PGDETAIL
    WHERE PGDETAIL.purchase_code=#{purchaseCode}
  </select>
  <resultMap id="relevanceGoodsMap" type="com.exx.dzj.entity.purchase.PurchaseGoodsDetailBean">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="purchase_code" jdbcType="VARCHAR" property="purchaseCode" />
    <result column="stock_code" jdbcType="VARCHAR" property="stockCode" />
    <result column="stock_name" jdbcType="VARCHAR" property="stockName" />
    <result column="stock_address_code" jdbcType="VARCHAR" property="stockAddressCode" />
    <result column="stock_address" jdbcType="VARCHAR" property="stockAddress" />
    <result column="goods_num" jdbcType="INTEGER" property="goodsNum" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="real_sell_price" jdbcType="DECIMAL" property="realSellPrice" />
    <result column="price_type" jdbcType="VARCHAR" property="priceType" />
    <result column="discount_rate" jdbcType="DECIMAL" property="discountRate" />
    <result column="discount_amount" jdbcType="DECIMAL" property="discountAmount" />
    <result column="purchase_volume" jdbcType="DECIMAL" property="purchaseVolume" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>

  <!-- 批量修改 -->
  <update id="batchUpdatePurchaseGoodsDetails">
    <foreach collection="list" separator=";" item="record">
      UPDATE tab_purchase_goods_detail
      <set>
        <if test="record.id != null">
          id = #{record.id,jdbcType=INTEGER},
        </if>
        <if test="record.purchaseCode != null">
          purchase_code = #{record.purchaseCode,jdbcType=VARCHAR},
        </if>
        <if test="record.stockCode != null">
          stock_code = #{record.stockCode,jdbcType=VARCHAR},
        </if>
        <if test="record.stockName != null">
          stock_name = #{record.stockName,jdbcType=VARCHAR},
        </if>
        <if test="record.stockAddressCode != null">
          stock_address_code = #{record.stockAddressCode,jdbcType=VARCHAR},
        </if>
        <if test="record.stockAddress != null">
          stock_address = #{record.stockAddress,jdbcType=VARCHAR},
        </if>
        <if test="record.goodsNum != null">
          goods_num = #{record.goodsNum,jdbcType=INTEGER},
        </if>
        <if test="record.realGoodsNum != null">
          real_goods_num = #{record.realGoodsNum,jdbcType=INTEGER},
        </if>
        <if test="record.unitPrice != null">
          unit_price = #{record.unitPrice,jdbcType=DECIMAL},
        </if>
        <if test="record.realSellPrice != null">
          real_sell_price = #{record.realSellPrice,jdbcType=DECIMAL},
        </if>
        <if test="record.priceType != null">
          price_type = #{record.priceType,jdbcType=VARCHAR},
        </if>
        <if test="record.discountRate != null">
          discount_rate = #{record.discountRate,jdbcType=DECIMAL},
        </if>
        <if test="record.discountAmount != null">
          discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
        </if>
        <if test="record.purchaseVolume != null">
          purchase_volume = #{record.purchaseVolume,jdbcType=DECIMAL},
        </if>
        <if test="record.remarks != null">
          remarks = #{record.remarks,jdbcType=VARCHAR},
        </if>
        <if test="record.createTime != null">
          create_time = #{record.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.createUser != null">
          create_user = #{record.createUser,jdbcType=VARCHAR},
        </if>
        <if test="record.updateUser != null">
          update_user = #{record.updateUser,jdbcType=VARCHAR},
        </if>
        update_time = SYSDATE()
      </set>
      <where>
        id=#{record.id}
      </where>
    </foreach>
  </update>

  <!-- 批量删除 -->
  <delete id="batchDeletePurchaseGoods">
    DELETE FROM tab_purchase_goods_detail
      WHERE id IN
      <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
        #{id}
      </foreach>
  </delete>
</mapper>